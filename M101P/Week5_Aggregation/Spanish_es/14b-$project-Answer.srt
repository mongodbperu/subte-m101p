1
00:00:00,000 --> 00:00:00,370

2
00:00:00,370 --> 00:00:01,110
De acuerdo.

3
00:00:01,110 --> 00:00:06,000
Y la respuesta es
"db.zips.aggregate([{$project",

4
00:00:06,000 --> 00:00:10,220
elimina el "_id" y luego
dame "city".

5
00:00:10,220 --> 00:00:14,330
Y la ciudad es una versión
en minúsculas de la ciudad actual,

6
00:00:14,330 --> 00:00:16,480
"$city" de los documentos.

7
00:00:16,480 --> 00:00:19,630
Se ha incluido "population",
por lo que simplemente hacemos

8
00:00:19,630 --> 00:00:21,620
": 1".

9
00:00:21,620 --> 00:00:25,290
Y es similar a la forma en
que lo hacemos cuando hacemos un "find".

10
00:00:25,290 --> 00:00:32,030
"state" está incluido y "zip" es
igual al valor "$_id" del

11
00:00:32,030 --> 00:00:33,340
documento.

12
00:00:33,340 --> 00:00:37,260
Quizá sea un poco rebuscado,
pero totalmente válido, 

13
00:00:37,260 --> 00:00:38,860
y ésa es la respuesta.

14
00:00:38,860 --> 00:00:41,070
Es un poco interesante
la forma en que esto se analiza,

15
00:00:41,070 --> 00:00:45,090
porque si hay un uno aquí,
entonces Mongo simplemente lo interpreta

16
00:00:45,090 --> 00:00:48,720
como incluido, pero si hay algo
más complejo como un

17
00:00:48,720 --> 00:00:53,010
documento JSON o un signo de dólar,
entonces termina teniendo

18
00:00:53,010 --> 00:00:55,060
que hacer algo más complicado.

19
00:00:55,060 --> 00:00:57,670
Por lo tanto parece como que hay un
cambio bastante grande dependiendo de si

20
00:00:57,670 --> 00:01:00,060
hay un simple entero 
aquí o algo más

21
00:01:00,060 --> 00:01:03,670
complejo cuando está analizando qué
hacer con cada una de estas claves.

22
00:01:03,670 --> 00:01:04,920