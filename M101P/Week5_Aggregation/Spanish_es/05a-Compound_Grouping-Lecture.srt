1
00:00:00,000 --> 00:00:00,120

2
00:00:00,120 --> 00:00:02,770
Ahora ya sabemos cómo agrupar
por una clave simple.

3
00:00:02,770 --> 00:00:04,720
Pero, ¿qué sucede si queremos agrupar
por claves múltiples?

4
00:00:04,720 --> 00:00:08,220
Por ejemplo, ¿qué ocurriría si quisiéramos
encontrar el número de productos

5
00:00:08,220 --> 00:00:11,100
que cada fabricante
tiene en cada categoría?

6
00:00:11,100 --> 00:00:14,030
Eso sería equivalente en
el mundo SQL a hacer 

7
00:00:14,030 --> 00:00:19,500
"SELECT manufacturer, 
category, COUNT(*)

8
00:00:19,500 --> 00:00:23,590
FROM products GROUP BY
manufacturer, category".

9
00:00:23,590 --> 00:00:27,340
Y si recuerdas, el conjunto
de datos era como esto.

10
00:00:27,340 --> 00:00:29,020
Por lo que queremos encontrar el número
de productos que cada

11
00:00:29,020 --> 00:00:30,920
fabricante tiene en
cada categoría.

12
00:00:30,920 --> 00:00:33,870
Hacemos esto usando Aggregation
Framework

13
00:00:33,870 --> 00:00:37,360
teniendo una clave 
compuesta "_id".

14
00:00:37,360 --> 00:00:41,490
Así que en lugar de decir que queremos
organizar nuestros documentos

15
00:00:41,490 --> 00:00:45,330
agrupados por fabricante, 
podría decir que quiero organizarlos

16
00:00:45,330 --> 00:00:48,210
por fabricante
y categoría.

17
00:00:48,210 --> 00:00:50,900
Y de nuevo puedo llamar a
esto como quiera.

18
00:00:50,900 --> 00:00:55,180
Eso es "manufacturer: 
'$manufacturer'",

19
00:00:55,180 --> 00:00:58,600
y "category: '$category'".

20
00:00:58,600 --> 00:01:01,700
Y teniendo un documento que sea mi
clave "_id", como

21
00:01:01,700 --> 00:01:04,160
Aggregation Framework
se ejecuta a través de esos documentos,

22
00:01:04,160 --> 00:01:06,850
estará buscando documentos
que tengan la misma categoría

23
00:01:06,850 --> 00:01:09,730
y fabricante y ejecutará la
agregación sobre ellos.

24
00:01:09,730 --> 00:01:11,630
Aquí está esa consulta un
poco más limpia,

25
00:01:11,630 --> 00:01:13,070
escrita en texto.

26
00:01:13,070 --> 00:01:15,410
Puedes ver que estoy
agrupando aquí.

27
00:01:15,410 --> 00:01:18,925
Y en lugar de agrupar simplemente
por "$manufacturer", estoy

28
00:01:18,925 --> 00:01:22,300
agrupando por "manufacturer:
'$manufacturer'" y

29
00:01:22,300 --> 00:01:25,030
"category: '$category'".

30
00:01:25,030 --> 00:01:29,100
Estos nombres justo aquí,
"manufacturer" y "category", son

31
00:01:29,100 --> 00:01:30,110
mi propia invención.

32
00:01:30,110 --> 00:01:34,550
Esencialmente puedo crear
una nueva clave, o "_id",

33
00:01:34,550 --> 00:01:38,230
por cada documento y llamarla
como quiera, siendo éstos

34
00:01:38,230 --> 00:01:40,040
los valores.

35
00:01:40,040 --> 00:01:44,150
Y luego estoy agregando y
recuperando la suma de todas

36
00:01:44,150 --> 00:01:46,030
esas agrupaciones diferentes.

37
00:01:46,030 --> 00:01:48,070
Así que si ejecuto eso,
¿qué obtengo?

38
00:01:48,070 --> 00:01:49,550
Veamos.

39
00:01:49,550 --> 00:01:51,910
Aquí, aquí están
los resultados.

40
00:01:51,910 --> 00:01:54,070
Puedes ver que los resultados
tienen un "_id" de

41
00:01:54,070 --> 00:01:57,760
"manufacturer: Amazon",
"category: Tablets".

42
00:01:57,760 --> 00:01:59,770
Y "num_products: 2" --

43
00:01:59,770 --> 00:02:02,960
"Google tablets", uno,
"Apple laptops", uno.

44
00:02:02,960 --> 00:02:05,050
Nombramos estas cosas
de manera arbitraria.

45
00:02:05,050 --> 00:02:11,890
Por lo que si voy aquí y cambio
esto para que sea "maker", entonces

46
00:02:11,890 --> 00:02:13,430
también funcionará.

47
00:02:13,430 --> 00:02:15,565
Ahora es "maker: Apple",
"category: laptops".

48
00:02:15,565 --> 00:02:17,560
Realmente no importa
cuál es el nombre.

49
00:02:17,560 --> 00:02:21,850
También es útil, si quiero,
puedo usar esta capacidad para crear

50
00:02:21,850 --> 00:02:24,520
una clave que en sí misma
es un documento JSON.

51
00:02:24,520 --> 00:02:28,500
Puedo usarlo para etiquetar mejor
una clave de agrupación simple.

52
00:02:28,500 --> 00:02:33,430
Así por ejemplo, teníamos antes
nuestro ejemplo simple donde estaba

53
00:02:33,430 --> 00:02:35,820
organizando el número de
productos por fabricante.

54
00:02:35,820 --> 00:02:37,970
Estaba obteniendo un informe
de eso.

55
00:02:37,970 --> 00:02:40,480
Y en vez de tenerlo sólo 
como "_id" 

56
00:02:40,480 --> 00:02:43,690
"$manufacturer",
realmente creé una clave

57
00:02:43,690 --> 00:02:48,670
de documento que es "manufacturer:
'$manufacturer'".

58
00:02:48,670 --> 00:02:51,480
Y el beneficio de eso es
que ahora el resultado es un

59
00:02:51,480 --> 00:02:52,960
poco más fácil de leer.

60
00:02:52,960 --> 00:02:55,600
Así que en vez de hacer que sea
simplemente "_id" "Apple" --

61
00:02:55,600 --> 00:02:57,300
quizá eso era obvio
antes --

62
00:02:57,300 --> 00:03:00,380
ahora es "_id",
"manufacturer: 'Apple'",

63
00:03:00,380 --> 00:03:01,270
"num_products: 4".

64
00:03:01,270 --> 00:03:03,990
Mismo resultado, pero un poco
más fácil de leer.

65
00:03:03,990 --> 00:03:06,490
Ahora puedes crear una clave
compuesta en la fase de agrupación que

66
00:03:06,490 --> 00:03:07,920
tenga tantas claves como quieras.

67
00:03:07,920 --> 00:03:08,960
Así que no necesitan
ser sólo dos.

68
00:03:08,960 --> 00:03:10,230
Podrían ser tres o cuatro.

69
00:03:10,230 --> 00:03:12,700
Cualquier cosa que quieras
agrupar, puedes ponerla justo

70
00:03:12,700 --> 00:03:15,970
aquí como "_id" de los
documentos que van 

71
00:03:15,970 --> 00:03:18,400
a crearse durante
la fase de agrupación.

72
00:03:18,400 --> 00:03:19,040
OK.

73
00:03:19,040 --> 00:03:20,320
Hagamos un cuestionario.

74
00:03:20,320 --> 00:03:21,690
Dada la siguiente
colección --

75
00:03:21,690 --> 00:03:23,580
que está justo aquí,
"db.stuff" --

76
00:03:23,580 --> 00:03:27,280
y tiene las claves "a", "b" y "c"
por cada documento, y la

77
00:03:27,280 --> 00:03:28,740
siguiente consulta de agregación --

78
00:03:28,740 --> 00:03:33,010
justo aquí hemos creado una
clave de agrupación compuesta que es

79
00:03:33,010 --> 00:03:36,140
un documento JSON, "Moe",
"Larry" y "Curly" --

80
00:03:36,140 --> 00:03:38,470
¿Cuántos documentos 
estarán en el conjunto resultante?

81
00:03:38,470 --> 00:03:39,720
Marca una.