1
00:00:00,000 --> 00:00:00,100

2
00:00:00,100 --> 00:00:03,710
El siguiente operador que vamos
a analizar es el operador "$avg"

3
00:00:03,710 --> 00:00:06,580
para averiguar el valor promedio
de una clave.

4
00:00:06,580 --> 00:00:09,100
De nuevo, tenemos nuestra colección
"products".

5
00:00:09,100 --> 00:00:12,700
Y vamos a averiguar el
precio medio por categoría, el

6
00:00:12,700 --> 00:00:15,630
precio promedio, por ejemplo,
de una tablet.

7
00:00:15,630 --> 00:00:18,790
Aquí está un programa que puede hacer
eso, o una expresión de

8
00:00:18,790 --> 00:00:20,160
agregación que puede hacer eso.

9
00:00:20,160 --> 00:00:22,355
Vamos a hacer un "$group".

10
00:00:22,355 --> 00:00:27,840
Nuestro "_id" va a ser un
documento compuesto de "category"

11
00:00:27,840 --> 00:00:30,490
donde vamos a llamar a la clave
"category" y luego vamos

12
00:00:30,490 --> 00:00:33,985
a sacar el valor de
"$category".

13
00:00:33,985 --> 00:00:36,190
Vamos a hacer la agregación sobre
eso, sobre "category".

14
00:00:36,190 --> 00:00:39,550
Y luego vamos a 
obtener el precio promedio.

15
00:00:39,550 --> 00:00:40,840
Puedes ver que dice "$avg".

16
00:00:40,840 --> 00:00:42,120
Y deberíamos llamarlo
de manera adecuada.

17
00:00:42,120 --> 00:00:44,180
Así que lo llamaremos "avg_price".

18
00:00:44,180 --> 00:00:45,110
Ahí está.

19
00:00:45,110 --> 00:00:48,200
Y obtenemos el promedio de la
expresión "$price", que es el

20
00:00:48,200 --> 00:00:50,590
valor de la clave "price" del documento.

21
00:00:50,590 --> 00:00:52,410
Así que continuemos y ejecutemos eso.

22
00:00:52,410 --> 00:00:53,310
Aquí lo tenemos.

23
00:00:53,310 --> 00:00:54,760
Vamos a ejecutarlo, mongo.

24
00:00:54,760 --> 00:00:58,500
Y simplemente vamos a redirigir
la entrada a "using_avg.js", que

25
00:00:58,500 --> 00:01:01,460
es el fichero que te acabo de enseñar.

26
00:01:01,460 --> 00:01:02,340
Y puedes ver eso.

27
00:01:02,340 --> 00:01:05,379
Y lo que obtenemos son sólo tres
documentos resultantes, lo cual

28
00:01:05,379 --> 00:01:08,990
tiene sentido, "category: 'laptops'",
"avg_price", "category:

29
00:01:08,990 --> 00:01:11,370
'cellphones'", "avg_price",
y "category: 'tablets'", 

30
00:01:11,370 --> 00:01:13,070
"avg_price".

31
00:01:13,070 --> 00:01:14,150
Ahora es el momento
de que lo hagas tú.

32
00:01:14,150 --> 00:01:15,230
Hagamos un cuestionario.

33
00:01:15,230 --> 00:01:18,340
Para este cuestionario, vamos
a usar el mismo conjunto de datos que usamos

34
00:01:18,340 --> 00:01:22,430
en el último problema, el cual es un conjunto 
de datos de "zip codes" de Estados Unidos,

35
00:01:22,430 --> 00:01:24,600
que son códigos portales.

36
00:01:24,600 --> 00:01:27,250
Si no hiciste el último cuestionario,
deberías volver y

37
00:01:27,250 --> 00:01:29,630
leer ese cuestionario sobre cómo usar "$sum".

38
00:01:29,630 --> 00:01:32,790
Te explicará este conjunto
de datos y cómo funciona.

39
00:01:32,790 --> 00:01:35,350
Éste es el documento del
conjunto de datos que te da la

40
00:01:35,350 --> 00:01:38,870
población de un "zip code" particular,
un código postal particular,

41
00:01:38,870 --> 00:01:40,000
como también se llama.

42
00:01:40,000 --> 00:01:43,850
Y en este caso cae en una
ciudad llamada "Fisher's Island",

43
00:01:43,850 --> 00:01:46,670
y la población es 329.

44
00:01:46,670 --> 00:01:48,960
Por favor, escribe una expresión de
agregación para

45
00:01:48,960 --> 00:01:52,230
calcular el promedio de la población
de un "zip code",

46
00:01:52,230 --> 00:01:54,880
que es un código
postal, por estado.

47
00:01:54,880 --> 00:01:58,090
Como antes, el código postal está
en el campo identificador, el campo 

48
00:01:58,090 --> 00:01:59,960
"_id" y es único.

49
00:01:59,960 --> 00:02:02,710
Y podemos suponer que la
colección se llama "zips".

50
00:02:02,710 --> 00:02:05,620
Y deberías llamar a la clave en
el resultado de la expresión de 

51
00:02:05,620 --> 00:02:09,699
agregación como "average_pop" para
que sepamos qué esperar,

52
00:02:09,699 --> 00:02:11,190
"average_pop".

53
00:02:11,190 --> 00:02:12,820
Y va a ser algo
en la línea de

54
00:02:12,820 --> 00:02:16,410
"db.zips.aggregate" y luego
la expresión completa.

55
00:02:16,410 --> 00:02:20,460
Por favor, no uses una especificación
"_id" compuesta.

56
00:02:20,460 --> 00:02:23,030
Usa simplemente lo que necesites
para resolver el problema.

57
00:02:23,030 --> 00:02:23,760
No lo renombres.

58
00:02:23,760 --> 00:02:25,210
Y pon la respuesta justo aquí.

59
00:02:25,210 --> 00:02:26,460