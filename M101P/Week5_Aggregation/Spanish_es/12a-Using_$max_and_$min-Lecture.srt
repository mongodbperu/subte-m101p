1
00:00:00,000 --> 00:00:00,180

2
00:00:00,180 --> 00:00:02,750
Las últimas dos expresiones que quiero
analizar antes de pasar

3
00:00:02,750 --> 00:00:05,160
a algunos otros temas
son "$max" y "$min".

4
00:00:05,160 --> 00:00:07,400
"$max" y "$min" son tan similares
que no voy a enseñarlos ambos.

5
00:00:07,400 --> 00:00:11,300
Pero lo que hace "$max" es recoger
el valor máximo en la

6
00:00:11,300 --> 00:00:14,160
agrupación, haciendo que
esté disponible para

7
00:00:14,160 --> 00:00:15,630
crear una nueva clave.

8
00:00:15,630 --> 00:00:17,940
Así que digamos que queremos averiguar
el precio máximo cobrado por

9
00:00:17,940 --> 00:00:22,040
cualquier fabricante en nuestro pequeño
catálogo de productos electrónicos.

10
00:00:22,040 --> 00:00:25,090
Y de nuevo, el catálogo se parece
un poco a esto.

11
00:00:25,090 --> 00:00:27,330
Vamos a averiguar el precio
máximo que cobra Amazon o

12
00:00:27,330 --> 00:00:29,440
el precio máximo que
cobra Google.

13
00:00:29,440 --> 00:00:32,940
Hacemos eso agrupando por 
"maker", recuperando el

14
00:00:32,940 --> 00:00:38,010
valor "$manufacturer" y luego
estableciendo una nueva clave,

15
00:00:38,010 --> 00:00:40,600
"maxprice" con "$max: '$price'".

16
00:00:40,600 --> 00:00:43,100
Y esto se refiere a
la clave "price".

17
00:00:43,100 --> 00:00:44,260
Así que ejecutamos eso.

18
00:00:44,260 --> 00:00:48,150
Y vemos el precio máximo
cobrado por Google, Amazon,

19
00:00:48,150 --> 00:00:51,650
Sony, Apple, etcétera
en nuestra pequeña colección.

20
00:00:51,650 --> 00:00:54,390
Ahora, fíjate que esto está
limitando un poco.

21
00:00:54,390 --> 00:00:58,170
Porque usando esta técnica
no puedo averiguar el nombre del

22
00:00:58,170 --> 00:01:00,820
producto y su precio máximo.

23
00:01:00,820 --> 00:01:04,060
Debido a que estoy agrupando por
"manufacturer" y no puedo agrupar

24
00:01:04,060 --> 00:01:05,670
por fabricante y producto.

25
00:01:05,670 --> 00:01:07,110
Eso no tendría ningún sentido.

26
00:01:07,110 --> 00:01:10,590
También quiero obtener el
producto que corresponde a

27
00:01:10,590 --> 00:01:11,430
ese precio.

28
00:01:11,430 --> 00:01:13,890
Y el máximo, realmente no hay una
forma sencilla de hacer eso.

29
00:01:13,890 --> 00:01:18,190
Pero hay algunas maneras para hacerlo
usando "$sort", "$last" y

30
00:01:18,190 --> 00:01:21,010
"$first", los cuales vamos a enseñarte
después de analizar algunas de

31
00:01:21,010 --> 00:01:23,660
las otras fases del "pipeline" que
están disponibles en 

32
00:01:23,660 --> 00:01:25,550
Aggregation Framework.

33
00:01:25,550 --> 00:01:26,870
OK, hagamos un cuestionario.

34
00:01:26,870 --> 00:01:27,970
Aquí está el cuestionario.

35
00:01:27,970 --> 00:01:31,280
Pensando otra vez en esta base 
de datos de códigos postales con la 

36
00:01:31,280 --> 00:01:36,390
que hemos estado jugando, encontremos
la población del código postal en

37
00:01:36,390 --> 00:01:38,910
cada estado que tiene
mayor población.

38
00:01:38,910 --> 00:01:42,890
Así que queremos agrupar por el
estado y averiguar la

39
00:01:42,890 --> 00:01:45,390
mayor población que existe
en cualquier código postal.

40
00:01:45,390 --> 00:01:47,550
Y de nuevo, la colección
se llama "zips".

41
00:01:47,550 --> 00:01:51,060
Y escribe tu consulta de
agregación por aquí.

42
00:01:51,060 --> 00:01:52,712