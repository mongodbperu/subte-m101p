1
00:00:00,000 --> 00:00:00,250

2
00:00:00,250 --> 00:00:01,750
La siguiente expresión de agregación
que vamos a 

3
00:00:01,750 --> 00:00:03,780
ver es "$push".

4
00:00:03,780 --> 00:00:06,940
"$push" es muy similar a
"$addToSet", salvo que "$push"

5
00:00:06,940 --> 00:00:09,520
no garantiza que añada
cada elemento sólo una vez.

6
00:00:09,520 --> 00:00:10,720
No revisa nada
para asegurarse

7
00:00:10,720 --> 00:00:12,400
que el elemento ya no está ahí.

8
00:00:12,400 --> 00:00:16,070
Digamos que quisiéramos
ver en qué categorías tiene

9
00:00:16,070 --> 00:00:18,770
productos cada fabricante.

10
00:00:18,770 --> 00:00:22,280
Mirando en nuestra pequeña
base de datos de productos electrónicos

11
00:00:22,280 --> 00:00:25,370
que creamos antes -- nuestra
pequeña colección donde

12
00:00:25,370 --> 00:00:27,410
tenemos un documento por
cada producto.

13
00:00:27,410 --> 00:00:30,490
Y tiene una categoría
y un fabricante.

14
00:00:30,490 --> 00:00:32,830
Y esta vez, en lugar de
usar "$addToSet", vamos

15
00:00:32,830 --> 00:00:33,660
a usar "$push".

16
00:00:33,660 --> 00:00:35,010
Por lo que si hacemos eso --

17
00:00:35,010 --> 00:00:36,360
"$push" de "category" --

18
00:00:36,360 --> 00:00:39,190
no debería ser muy sorprendente
el resultado que obtenemos.

19
00:00:39,190 --> 00:00:44,720
Lo que obtenemos es 
un documento por cada fabricante,

20
00:00:44,720 --> 00:00:49,220
Google, Tablets,
Amazon, Tablets, Tablets.

21
00:00:49,220 --> 00:00:50,500
Pero ves estos
duplicados --

22
00:00:50,500 --> 00:00:52,170
Tablets, Tablets.

23
00:00:52,170 --> 00:00:54,110
Y verás con Apple,
sus Tablets, Tablets,

24
00:00:54,110 --> 00:00:55,370
Tablets, Laptops.

25
00:00:55,370 --> 00:00:57,120
Y eso es porque hay
cuatro documentos

26
00:00:57,120 --> 00:00:58,180
que incluyen Apple.

27
00:00:58,180 --> 00:00:59,690
Y va a mirar
a cada uno.

28
00:00:59,690 --> 00:01:02,080
Y va a poner este
elemento en este array

29
00:01:02,080 --> 00:01:03,930
de categorías, en comparación a "$addToSet".

30
00:01:03,930 --> 00:01:06,580
Y por eso podrían aparecen
más de una vez.

31
00:01:06,580 --> 00:01:08,250
Y éste es el resultado.

32
00:01:08,250 --> 00:01:09,840
Depende de cuál
sea tu objetivo.

33
00:01:09,840 --> 00:01:11,930
Éste podría ser el resultado correcto
o el resultado erróneo, dependiendo

34
00:01:11,930 --> 00:01:13,380
de qué estés intentando hacer.

35
00:01:13,380 --> 00:01:14,590
Ahora hagamos un cuestionario.

36
00:01:14,590 --> 00:01:15,010
De acuerdo.

37
00:01:15,010 --> 00:01:17,430
Dado el conjunto de datos de "zip codes"
que vimos antes,

38
00:01:17,430 --> 00:01:21,490
el cual se explicó más detalladamente en
el cuestionario acerca del uso de "sum",

39
00:01:21,490 --> 00:01:22,110
un poco atrás.

40
00:01:22,110 --> 00:01:23,420
Puedes revisarlo.

41
00:01:23,420 --> 00:01:26,140
Y tiene documentos que son
como éste, de nuevo, donde cada

42
00:01:26,140 --> 00:01:29,600
documento tiene un código postal, o
también conocido como "zip code" aquí

43
00:01:29,600 --> 00:01:33,630
en los Estados Unidos, y te dirá
la población de ese código

44
00:01:33,630 --> 00:01:37,620
postal / "zip code", el estado en el que
está y la ciudad a la que pertenece.

45
00:01:37,620 --> 00:01:39,410
Lo que vamos a hacer es, vamos
a ejecutar estas dos

46
00:01:39,410 --> 00:01:42,240
consultas diferentes que van
a decirnos los códigos

47
00:01:42,240 --> 00:01:44,680
postales que corresponden a
una ciudad particular.

48
00:01:44,680 --> 00:01:46,870
Por lo que vamos a agrupar
por ciudad.

49
00:01:46,870 --> 00:01:50,950
Y vamos a generar con "$push" una
lista de códigos postales.

50
00:01:50,950 --> 00:01:53,740
Y la pregunta es, si lo hiciéramos
de dos maneras distintas, una

51
00:01:53,740 --> 00:01:57,580
con un "$push" por aquí y otra
con un "$addToSet", 

52
00:01:57,580 --> 00:01:59,750
¿esperarías obtener un resultado
diferente o el mismo resultado para

53
00:01:59,750 --> 00:02:01,250
estas dos consultas distintas?

54
00:02:01,250 --> 00:02:02,500
Ésa es la pregunta.