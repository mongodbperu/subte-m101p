1
00:00:00,000 --> 00:00:00,130

2
00:00:00,130 --> 00:00:03,200
Y la respuesta es que añadiendo el
índice apropiado en colecciones

3
00:00:03,200 --> 00:00:04,900
grandes de modo que sólo un
pequeño porcentaje de consultas

4
00:00:04,900 --> 00:00:07,090
necesitan escanear la
colección, va a tener un

5
00:00:07,090 --> 00:00:08,320
mayor impacto.

6
00:00:08,320 --> 00:00:10,800
Un poco más de memoria para que
la carga de trabajo se ajuste

7
00:00:10,800 --> 00:00:13,590
en memoria, ayudará.

8
00:00:13,590 --> 00:00:16,059
Pero, en realidad no
serás capaz de obtener tu

9
00:00:16,059 --> 00:00:17,780
base de datos en memoria, a pesar
que serás capaz de obtener todo

10
00:00:17,780 --> 00:00:20,730
tu índice en memoria.

11
00:00:20,730 --> 00:00:21,865
Y eso va a ser importante
para el rendimiento,

12
00:00:21,865 --> 00:00:23,730
como veremos más adelante.

13
00:00:23,730 --> 00:00:26,960
Añadiendo un disco duro
más rápido, ayudará.

14
00:00:26,960 --> 00:00:29,200
Pero la verdad es que las
mejoras algorítmicas que

15
00:00:29,200 --> 00:00:33,270
llegan a usar un índice
tiene una magnitud mayor

16
00:00:33,270 --> 00:00:35,800
que lo que vas a obtener por
tener un disco duro más rápido

17
00:00:35,800 --> 00:00:36,920
en tu computador.

18
00:00:36,920 --> 00:00:39,520
Lo mismo es cierto
para un procesador.

19
00:00:39,520 --> 00:00:43,370
Reemplazando un procesador más
rápido está bien, pero las mejoras

20
00:00:43,370 --> 00:00:45,850
algorítmicas que obtengas
usando un índice en la

21
00:00:45,850 --> 00:00:48,360
base de datos es
mucho más importante.

22
00:00:48,360 --> 00:00:50,690
Y así pensar sobre indexación
cuando estás pensando en

23
00:00:50,690 --> 00:00:53,410
rendimiento en una base de datos
va a ser absolutamente crítico.

24
00:00:53,410 --> 00:00:54,660
