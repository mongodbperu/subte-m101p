1
00:00:00,000 --> 00:00:03,540
Hablemos durante un momento sobre
la cardinalidad de los índices, que es

2
00:00:03,540 --> 00:00:06,990
cuántos puntos hay
por cada tipo diferente

3
00:00:06,990 --> 00:00:10,180
de índice que soporta
MongoDB.

4
00:00:10,180 --> 00:00:13,940
Ahora en un índice normal, por
cada clave individual que pones

5
00:00:13,940 --> 00:00:15,190
en el índice,
desde luego va

6
00:00:15,190 --> 00:00:17,300
a haber un punto en el índice.

7
00:00:17,300 --> 00:00:20,650
Y además, si no hay
clave, entonces va a

8
00:00:20,650 --> 00:00:23,080
haber un punto en el índice bajo
la entrada "null".

9
00:00:23,080 --> 00:00:26,650
Por lo que esencialmente, obtienes alrededor de
una asociación uno a uno con el

10
00:00:26,650 --> 00:00:29,210
número de documentos en la
colección en términos de cardinalidad

11
00:00:29,210 --> 00:00:30,640
del índice.

12
00:00:30,640 --> 00:00:31,990
Y eso hace que el índice
tenga un cierto tamaño.

13
00:00:31,990 --> 00:00:35,270
Y es proporcional al
tamaño de la colección en términos de

14
00:00:35,270 --> 00:00:37,770
sus punteros finales a documentos.

15
00:00:37,770 --> 00:00:41,820
En un índice disperso, cuando un
documento no tiene la clave

16
00:00:41,820 --> 00:00:45,920
que está siendo indexada, no está en el
índice porque es "null" y

17
00:00:45,920 --> 00:00:49,280
no mantenemos "nulls" en el
índice para un índice disperso.

18
00:00:49,280 --> 00:00:52,790
Por lo que aquí, vamos a tener
puntos en el índice que podrían ser

19
00:00:52,790 --> 00:00:56,610
potencialmente menor o igual que
el número de documentos.

20
00:00:56,610 --> 00:00:59,750
Y por último, aquí en un índice
multiclave, que es un

21
00:00:59,750 --> 00:01:02,520
índice sobre un valor de tipo array --

22
00:01:02,520 --> 00:01:05,660
y un índice se convierte en un índice
multiclave tan pronto como

23
00:01:05,660 --> 00:01:11,720
tenga al menos un valor dentro
de cualquier documento que sea un array.

24
00:01:11,720 --> 00:01:13,970
Entonces podría haber
múltiples puntos en el

25
00:01:13,970 --> 00:01:15,830
índice por cada documento.

26
00:01:15,830 --> 00:01:19,190
Por ejemplo, si hay algún
tipo de array "tags" en un

27
00:01:19,190 --> 00:01:26,480
documento, y tiene tres
o cinco o cuatro etiquetas, entonces

28
00:01:26,480 --> 00:01:29,780
va a haber un punto en el
índice por cada valor individual de

29
00:01:29,780 --> 00:01:31,040
estas claves.

30
00:01:31,040 --> 00:01:34,770
Y así podría ser mayor que
el número de documentos.

31
00:01:34,770 --> 00:01:36,450
Y podría ser significativamente
mayor que

32
00:01:36,450 --> 00:01:38,100
el número de documentos.

33
00:01:38,100 --> 00:01:41,430
Y esto surge porque
los índices necesitan mantenerse.

34
00:01:41,430 --> 00:01:43,330
Hay un coste de mantenimiento para
ellos.

35
00:01:43,330 --> 00:01:47,510
Y si algo causa que el
índice tenga que ser

36
00:01:47,510 --> 00:01:48,170
reescrito --

37
00:01:48,170 --> 00:01:50,210
por ejemplo, digamos que
se mueve un documento.

38
00:01:50,210 --> 00:01:53,170
Cuando un documento se mueve -- y
podría moverse simplemente porque

39
00:01:53,170 --> 00:01:55,070
le añadiste algo que lo hace
muy grande para ajustarse al

40
00:01:55,070 --> 00:01:57,760
espacio que la base de datos
tiene para él en disco, por lo que

41
00:01:57,760 --> 00:01:59,230
necesita moverlo a
una nueva ubicación.

42
00:01:59,230 --> 00:02:02,910
Cada punto individual en el índice que
apunta a ese documento necesita

43
00:02:02,910 --> 00:02:04,860
ser actualizado.

44
00:02:04,860 --> 00:02:08,030
Ahora, si la clave es "null" para un
índice particular, entonces

45
00:02:08,030 --> 00:02:11,530
no es necesario que ocurra
ninguna actualización del índice.

46
00:02:11,530 --> 00:02:14,110
Si es un índice normal, bien, 
entonces sí, un punto en el índice

47
00:02:14,110 --> 00:02:15,590
necesita ser actualizado, seguro.

48
00:02:15,590 --> 00:02:20,130
Y si es un índice multiclave,
y hay 100 o 200 o 300

49
00:02:20,130 --> 00:02:22,690
elementos en un array, entonces
todos ellos necesitan ser

50
00:02:22,690 --> 00:02:25,440
actualizados en el índice.

51
00:02:25,440 --> 00:02:27,990
Bien, hora de hacer un cuestionario.

52
00:02:27,990 --> 00:02:29,970
Digamos que actualizas un documento
con una clave llamada

53
00:02:29,970 --> 00:02:32,540
"tags" y esa actualización provoca que
el documento se tenga que

54
00:02:32,540 --> 00:02:33,950
mover en disco.

55
00:02:33,950 --> 00:02:36,830
Si el documento tiene 100 etiquetas, 
y si el array "tags"

56
00:02:36,830 --> 00:02:39,970
está indexado con un índice
multiclave, ¿cuántos puntos necesitarían

57
00:02:39,970 --> 00:02:42,830
ser actualizados en el índice
para ajustarse a ese movimiento?

58
00:02:42,830 --> 00:02:44,080
Pon sólo el número más abajo.

59
00:02:44,080 --> 00:02:45,240