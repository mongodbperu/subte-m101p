1
00:00:00,000 --> 00:00:00,160

2
00:00:00,160 --> 00:00:03,260
Ahora hablemos acerca de índices
geoespaciales que

3
00:00:03,260 --> 00:00:05,240
tienen en cuenta la curvatura
de la Tierra.

4
00:00:05,240 --> 00:00:08,570
Un modelo esférico de la
Tierra, que es la Tierra en

5
00:00:08,570 --> 00:00:09,790
la que realmente vivimos.

6
00:00:09,790 --> 00:00:13,490
En un modelo esférico de la
Tierra, las posiciones sobre

7
00:00:13,490 --> 00:00:16,800
ella se especifican normalmente
en longitud y latitud.

8
00:00:16,800 --> 00:00:20,830
Y las líneas de longitud van
desde un polo al otro,

9
00:00:20,830 --> 00:00:23,460
y las líneas de latitud van
alrededor de la Tierra como eso,

10
00:00:23,460 --> 00:00:26,775
y sólo dibujaré
el ecuador en rojo.

11
00:00:26,775 --> 00:00:29,170
Éste es mi ecuador en rojo.

12
00:00:29,170 --> 00:00:32,369
Ahora si estamos cerca del
ecuador, entonces las líneas

13
00:00:32,369 --> 00:00:33,880
de longitud están más separadas.

14
00:00:33,880 --> 00:00:35,910
Y a medida que llegamos a los polos,
las líneas de

15
00:00:35,910 --> 00:00:37,840
longitud están más juntas.

16
00:00:37,840 --> 00:00:39,850
Ahora, si tienes una persona
en cualquier lugar de la

17
00:00:39,850 --> 00:00:41,530
Tierra, tienes una persona
justo aquí.

18
00:00:41,530 --> 00:00:43,090
Podrías querer averiguar,
bien, ¿cuáles son

19
00:00:43,090 --> 00:00:44,230
las diferentes ubicaciones?

20
00:00:44,230 --> 00:00:46,400
¿Diferentes almacenes que
están cerca de él?

21
00:00:46,400 --> 00:00:49,410
Puedes hacer eso usando el
modelo esférico especificando

22
00:00:49,410 --> 00:00:50,630
una distancia máxima.

23
00:00:50,630 --> 00:00:53,950
Eso aceptará documentos que
satisfagan ese criterio

24
00:00:53,950 --> 00:00:56,290
de distancia máxima, y luego queremos que
la base de datos devuelva los

25
00:00:56,290 --> 00:00:59,280
documentos en orden de
distancia creciente.

26
00:00:59,280 --> 00:01:02,490
Todo eso está muy bien, ahora, esta distancia
máxima va a ser

27
00:01:02,490 --> 00:01:04,590
especificada en radianes.

28
00:01:04,590 --> 00:01:06,680
Hagamos una pequeña
revisión de matemáticas aquí.

29
00:01:06,680 --> 00:01:10,090
Así, si tienes un círculo y si
tienes una distancia, 

30
00:01:10,090 --> 00:01:11,550
digamos que está especificada
en metros.

31
00:01:11,550 --> 00:01:14,300
Esta distancia "d" que 
estoy enseñando en rojo.

32
00:01:14,300 --> 00:01:20,340
Entonces la distancia "d", recorrida por
el arco "zeta" es igual a "pi * r"

33
00:01:20,340 --> 00:01:23,190
donde "r" es el radio de
la Tierra en metros.

34
00:01:23,190 --> 00:01:27,950
Por lo que si conoces la distancia, dices
¡oh!, quiero que sea, 

35
00:01:27,950 --> 00:01:29,600
quiero encontrar todos los 
documentos a 100

36
00:01:29,600 --> 00:01:32,000
metros de esta posición.

37
00:01:32,000 --> 00:01:35,900
Entonces el arco en radianes es la
distancia que estás buscando.

38
00:01:35,900 --> 00:01:38,790
Digamos que 100 metros divididos
por el radio de

39
00:01:38,790 --> 00:01:40,570
la Tierra en metros.

40
00:01:40,570 --> 00:01:42,460
Y luego obtienes 
el ángulo "zeta".

41
00:01:42,460 --> 00:01:44,130
Y ésa es la manera en que vas a
necesitar especificar cualquier

42
00:01:44,130 --> 00:01:47,080
distancia máxima en este modelo.

43
00:01:47,080 --> 00:01:50,270
El modelo esférico se 
introdujo en MongoDB después del

44
00:01:50,270 --> 00:01:54,160
modelo 2D, y por eso usa algunas
de las mismas funcionalidades,

45
00:01:54,160 --> 00:01:55,830
incluso a pesar de ser
un modelo esférico.

46
00:01:55,830 --> 00:01:59,640
En particular, cuando creas un
índice sobre la posición dentro

47
00:01:59,640 --> 00:02:00,800
del documento.

48
00:02:00,800 --> 00:02:05,050
Todavía vas a decir
que es de tipo 2D.

49
00:02:05,050 --> 00:02:09,930
Aunque considero que esto
es más un modelo 3D.

50
00:02:09,930 --> 00:02:11,900
Supongo que sólo está mirando en la 
superficie de la Tierra, por lo que

51
00:02:11,900 --> 00:02:14,700
podrías llamarlo modelo
esférico, pero todavía se

52
00:02:14,700 --> 00:02:17,260
le llama índice 2D.

53
00:02:17,260 --> 00:02:21,190
Y la diferencia es que
cuando lo consultas, vas a 

54
00:02:21,190 --> 00:02:23,630
consultarlo de 
forma distinta.

55
00:02:23,630 --> 00:02:25,680
Echemos un vistazo a cómo
vamos a consultarlo.

56
00:02:25,680 --> 00:02:28,460
Ahora tengo aquí la misma 
colección que tenía antes,

57
00:02:28,460 --> 00:02:32,240
mi colección "stores",
y te recordaré

58
00:02:32,240 --> 00:02:34,380
qué hay en ella.

59
00:02:34,380 --> 00:02:36,760
Tengo tres documentos
ahí, que contienen

60
00:02:36,760 --> 00:02:38,680
posiciones listadas como arrays.

61
00:02:38,680 --> 00:02:41,950
Antes te dije que eran
coordenadas "x, y",

62
00:02:41,950 --> 00:02:43,480
podrían incluso ser "y, x" y
no importaría.

63
00:02:43,480 --> 00:02:45,810
Porque en geometría cartesiana
no importa

64
00:02:45,810 --> 00:02:46,900
cuál sea.

65
00:02:46,900 --> 00:02:50,320
Pero en este modelo esférico
importa mucho más.

66
00:02:50,320 --> 00:02:53,445
Y esas coordenadas tienen que ser 
consideradas longitudes

67
00:02:53,445 --> 00:02:54,760
y latitudes.

68
00:02:54,760 --> 00:02:57,300
Así que recuerda -- es longitud,
latitud.

69
00:02:57,300 --> 00:02:59,020
No latitud, longitud.

70
00:02:59,020 --> 00:03:00,870
Y por eso vamos a considerar
que son longitudes,

71
00:03:00,870 --> 00:03:03,030
latitudes en todos estos
documentos.

72
00:03:03,030 --> 00:03:06,230
Ahora ya hay un índice 2D 
aquí, si

73
00:03:06,230 --> 00:03:09,140
recuerdas , si haces un "getIndexes"
puedes verlo.

74
00:03:09,140 --> 00:03:10,620
Lo haré de nuevo.

75
00:03:10,620 --> 00:03:13,560
Sólo para que esta lección pueda
ser independiente, puedes ver que

76
00:03:13,560 --> 00:03:17,270
hay algo sobre "location"
justo aquí, y está marcado como "2d".

77
00:03:17,270 --> 00:03:20,230
Aunque vamos a usarlo
de una forma que nos da una distancia

78
00:03:20,230 --> 00:03:22,620
3D desde una posición
particular.

79
00:03:22,620 --> 00:03:23,950
La sintaxis es similar a esto.

80
00:03:23,950 --> 00:03:26,000
Usa el comando "geoNear".

81
00:03:26,000 --> 00:03:29,590
Y más que usarlo con
con el "find", se usa

82
00:03:29,590 --> 00:03:30,650
con "runCommand",

83
00:03:30,650 --> 00:03:32,390
el cual te permite ejecutar
toda una serie de

84
00:03:32,390 --> 00:03:33,580
comandos en la base de datos.

85
00:03:33,580 --> 00:03:36,520
En este caso vamos a 
especificar que "geoNear" es el

86
00:03:36,520 --> 00:03:38,390
que estamos buscando.

87
00:03:38,390 --> 00:03:41,570
Y que no tendremos que mirar
en la colección "stores".

88
00:03:41,570 --> 00:03:46,500
Ahora "stores" tiene que ser indicada
específicamente, porque no

89
00:03:46,500 --> 00:03:49,430
dice "db.stores" aquí, dice
"db.runCommand" y la

90
00:03:49,430 --> 00:03:51,650
base de datos no tendría forma de
saber que quieres buscar

91
00:03:51,650 --> 00:03:54,780
en la colección "stores" a menos que
lo especifiques aquí.

92
00:03:54,780 --> 00:03:57,010
Y luego está "near" y 
esta posición.

93
00:03:57,010 --> 00:03:59,750
De nuevo es longitud,
latitud.

94
00:03:59,750 --> 00:04:04,220
Especifico que "spherical" es "true",
lo cual le dice al sistema --

95
00:04:04,220 --> 00:04:04,820
la base de datos --

96
00:04:04,820 --> 00:04:06,920
que estoy buscando con el
modelo esférico.

97
00:04:06,920 --> 00:04:11,750
Y luego indico una distancia
máxima de un radián.

98
00:04:11,750 --> 00:04:15,893
Un radián es, ya sabes, si hay dos pi
radianes, aproximadamente seis radianes

99
00:04:15,893 --> 00:04:17,360
alrededor de la Tierra.

100
00:04:17,360 --> 00:04:20,360
Por lo que es como 1/6 del
camino alrededor de la Tierra.

101
00:04:20,360 --> 00:04:22,900
Y si hago eso, aquí está
lo que obtengo.

102
00:04:22,900 --> 00:04:26,670
Obtengo este documento 
bastante complicado.

103
00:04:26,670 --> 00:04:29,560
Y si miro aquí,
en "results", ahí es

104
00:04:29,560 --> 00:04:30,300
donde está la acción.

105
00:04:30,300 --> 00:04:33,080
Es por aquí donde, este
objeto es el documento

106
00:04:33,080 --> 00:04:36,410
real de la colección
que satisface el criterio.

107
00:04:36,410 --> 00:04:40,740
Y si le diera una distancia máxima
mayor de, digamos 3

108
00:04:40,740 --> 00:04:45,650
radianes, que es la mitad del camino
alrededor de la Tierra, en ese

109
00:04:45,650 --> 00:04:49,525
punto todos los documentos van
a satisfacer eso, y

110
00:04:49,525 --> 00:04:51,170
van a ser
devueltos en orden

111
00:04:51,170 --> 00:04:52,580
de distancia creciente.

112
00:04:52,580 --> 00:04:55,960
Así que devuelve lo mismo
primero, que es la peluquería

113
00:04:55,960 --> 00:04:58,130
"Rubys", "40, 74".

114
00:04:58,130 --> 00:04:58,890
Veamos.

115
00:04:58,890 --> 00:05:00,020
Asegurémonos que es cierto.

116
00:05:00,020 --> 00:05:00,420
Sí.

117
00:05:00,420 --> 00:05:02,030
Es cierto, está bien.

118
00:05:02,030 --> 00:05:03,800
Por lo que ésta es todavía
la más cercana.

119
00:05:03,800 --> 00:05:06,980
Pero ahora que hemos ampliado la
distancia máxima, también estamos

120
00:05:06,980 --> 00:05:10,210
obteniendo la ferretería "ACE Hardware",
y también la tienda

121
00:05:10,210 --> 00:05:11,730
"Tickle Candy".

122
00:05:11,730 --> 00:05:13,500
Y así es como se usa
el modelo esférico.

123
00:05:13,500 --> 00:05:15,880
Así que sólo por repasar -- almacena
la posición tal y como

124
00:05:15,880 --> 00:05:19,365
hiciste antes en una clave de tu propia
elección dentro de un array

125
00:05:19,365 --> 00:05:23,390
con dos valores, y tienen
que ser longitud, latitud.

126
00:05:23,390 --> 00:05:26,720
Aseguras un índice en la
colección de tipo 2D,

127
00:05:26,720 --> 00:05:29,010
aunque vamos a usar un
modelo esférico para consultarlo.

128
00:05:29,010 --> 00:05:31,980
Y luego usamos este "runCommand"
"geoNear" con un

129
00:05:31,980 --> 00:05:33,250
montón de parámetros.

130
00:05:33,250 --> 00:05:36,920
Eso te dejará buscar
cualquiera de estos documentos.

131
00:05:36,920 --> 00:05:38,920
Averiguar qué documentos son los
más cercanos a una posición

132
00:05:38,920 --> 00:05:42,280
particular, y especificando una
distancia máxima si quieres.

133
00:05:42,280 --> 00:05:45,920
Hay otras opciones para
éstos, hay otros

134
00:05:45,920 --> 00:05:48,660
detalles, límites, 
condiciones y otras cosas

135
00:05:48,660 --> 00:05:51,950
que no hemos visto completamente
en esta lección.

136
00:05:51,950 --> 00:05:53,930
Por lo que tendrás que buscar en la
documentación si quieres

137
00:05:53,930 --> 00:05:56,750
aprender más acerca de estos
índices geoespaciales.

138
00:05:56,750 --> 00:06:01,410
Pero es realmente conveniente si
quieres hacer búsquedas por

139
00:06:01,410 --> 00:06:02,980
posición dentro de MongoDB.

140
00:06:02,980 --> 00:06:04,230