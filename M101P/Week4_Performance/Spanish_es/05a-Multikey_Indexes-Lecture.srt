1
00:00:00,000 --> 00:00:00,160

2
00:00:00,160 --> 00:00:05,250
En MongoDB puedes tener una
clave que contenga un array.

3
00:00:05,250 --> 00:00:07,770
Por ejemplo, si tienes una clave
"tags" que contiene "cycling",

4
00:00:07,770 --> 00:00:09,450
"tennis" y "football".

5
00:00:09,450 --> 00:00:15,370
Y puedes indexar "tags", por lo que
puedes llamar a "ensureIndex" y

6
00:00:15,370 --> 00:00:17,900
puedes decirle a la base de datos
que quieres que se 

7
00:00:17,900 --> 00:00:19,785
indexe la clave "tags".

8
00:00:19,785 --> 00:00:23,160
Ahora, si haces eso, lo que hace
MongoDB es crear

9
00:00:23,160 --> 00:00:25,540
lo que se conoce como índice
multiclave.

10
00:00:25,540 --> 00:00:30,980
Un índice multiclave es,
más que crear un punto en el

11
00:00:30,980 --> 00:00:34,890
índice por cada documento,
si ve un array en el

12
00:00:34,890 --> 00:00:37,840
documento, creará
un punto en el índice por

13
00:00:37,840 --> 00:00:40,100
cada elemento en el array.

14
00:00:40,100 --> 00:00:45,860
De forma que si hacemos un "find" donde
"cycling" esté en "tags", entonces

15
00:00:45,860 --> 00:00:50,110
será rápido porque es
capaz de usar el índice.

16
00:00:50,110 --> 00:00:53,200
Y eso sólo ocurre
si es un array.

17
00:00:53,200 --> 00:00:55,160
Eso es lo que se llama un índice
multiclave.

18
00:00:55,160 --> 00:00:57,210
Luego puedes crear
un índice compuesto.

19
00:00:57,210 --> 00:01:02,960
Por ejemplo, puedo crear un
índice compuesto sobre

20
00:01:02,960 --> 00:01:04,349
"tags, color" o algo así.

21
00:01:04,349 --> 00:01:06,220
Y eso funciona bien.

22
00:01:06,220 --> 00:01:08,890
Pero Mongo restringe
las consultas.

23
00:01:08,890 --> 00:01:13,860
No puedes tener dos elementos en un
documento que sean ambos arrays

24
00:01:13,860 --> 00:01:15,700
si existe un índice multiclave.

25
00:01:15,700 --> 00:01:17,690
Ahora, todo esto es
dinámico, ¿de acuerdo?

26
00:01:17,690 --> 00:01:20,950
Así que cuando primero creas un
índice sobre dos cosas, MongoDB

27
00:01:20,950 --> 00:01:22,720
no sabe si va a 
haber arrays o no

28
00:01:22,720 --> 00:01:23,760
en esos elementos.

29
00:01:23,760 --> 00:01:27,470
Por lo que cuando insertas los
elementos es cuando te impedirá

30
00:01:27,470 --> 00:01:28,690
que los insertes
si ambos son

31
00:01:28,690 --> 00:01:30,240
arrays y multiclaves.

32
00:01:30,240 --> 00:01:34,090
Y la razón es debido a la
expansión polinómica que

33
00:01:34,090 --> 00:01:38,500
tendrías de los puntos en el índice cada
vez que añadieras

34
00:01:38,500 --> 00:01:43,430
y eliminaras algo del
array si te permitiésemos

35
00:01:43,430 --> 00:01:46,500
índices compuestos donde ambos
elementos fueran arrays.

36
00:01:46,500 --> 00:01:49,120
Permíteme que concrete esto más
enseñándote algunas

37
00:01:49,120 --> 00:01:51,270
cosas en el shell.

38
00:01:51,270 --> 00:01:56,020
Simplemente voy a usar la
base de datos "test" aquí y voy

39
00:01:56,020 --> 00:02:00,140
a empezar realmente
creando una colección e

40
00:02:00,140 --> 00:02:01,910
insertando algo en
la colección.

41
00:02:01,910 --> 00:02:05,550
Llamaré a la colección "bbb".

42
00:02:05,550 --> 00:02:09,570
Inserté en "bbb"
"a" y "b" con valor uno.

43
00:02:09,570 --> 00:02:14,140
Y ahora puedo, si quiero, puedo
crear un índice para eso.

44
00:02:14,140 --> 00:02:16,540
En este punto tengo que establecer
un índice compuesto estándar.

45
00:02:16,540 --> 00:02:21,470
Pero, ¿qué pasaría si intentara insertar
algo en el índice que

46
00:02:21,470 --> 00:02:24,060
fuera un array?,
puedo hacerlo.

47
00:02:24,060 --> 00:02:29,660
Así que ahora voy a insertar
"a" es "[1, 2, 3]".

48
00:02:29,660 --> 00:02:33,610
En este punto es un
índice multiclave, y también puedo

49
00:02:33,610 --> 00:02:38,110
insertar algo como, digamos,
"b" es "[1, 2, 3]".

50
00:02:38,110 --> 00:02:44,040
Ahora "a" va a ser 5 en este
caso, y "b" va a ser el

51
00:02:44,040 --> 00:02:45,500
array "[1, 2, 3]".

52
00:02:45,500 --> 00:02:48,130
Unos dos puntos extra ahí.

53
00:02:48,130 --> 00:02:49,650
Aquí vamos.

54
00:02:49,650 --> 00:02:51,430
Todo eso funciona bien.

55
00:02:51,430 --> 00:02:54,870
Y hay un índice aquí,
y puedes verlo, si

56
00:02:54,870 --> 00:02:57,480
llamas a "getIndexes" verás
los índices que creamos.

57
00:02:57,480 --> 00:03:01,650
Por lo que ahí está el índice que
creamos sobre "a" y "b". Pero si

58
00:03:01,650 --> 00:03:06,370
intento insertar algo donde
tanto "a" como "b" sean arrays dentro

59
00:03:06,370 --> 00:03:10,120
de este índice multiclave, la
base de datos se quejará.

60
00:03:10,120 --> 00:03:11,630
No permitirá eso.

61
00:03:11,630 --> 00:03:14,460
No puedes indexar los arrays
paralelos "b" y "a".

62
00:03:14,460 --> 00:03:17,990
Por lo que ahí queda este concepto de
índice multiclave en MongoDB.

63
00:03:17,990 --> 00:03:19,170
Es dinámico.

64
00:03:19,170 --> 00:03:21,870
No sabe realmente si va
a haber valores de tipo array en

65
00:03:21,870 --> 00:03:23,020
una clave dada.

66
00:03:23,020 --> 00:03:26,730
Pero si empiezas a añadir arrays
a una clave, está bien.

67
00:03:26,730 --> 00:03:29,160
Si es parte del índice
creará el siguiente punto por cada

68
00:03:29,160 --> 00:03:31,680
elemento en el array, pero
no puede hacerlo para arrays

69
00:03:31,680 --> 00:03:35,380
paralelos, así los llama, si
más de un valor es un

70
00:03:35,380 --> 00:03:37,700
array en un índice compuesto.

71
00:03:37,700 --> 00:03:40,670
OK, hora de hacer un cuestionario.

72
00:03:40,670 --> 00:03:44,290
Supongamos que tenemos una colección "foo"
que tiene un índice creado

73
00:03:44,290 --> 00:03:45,440
de esta forma.

74
00:03:45,440 --> 00:03:49,610
"db.foo.ensureIndex({a:1, b:1})".

75
00:03:49,610 --> 00:03:52,720
¿Cuáles de las siguientes inserciones
son válidas para esta colección?

76
00:03:52,720 --> 00:03:54,940
Y no las analizaré,
porque ya están

77
00:03:54,940 --> 00:03:56,210
un poco detalladas.

78
00:03:56,210 --> 00:03:58,970
Pero averigua cuáles de
ellas son válidas para la

79
00:03:58,970 --> 00:04:00,220
colección.