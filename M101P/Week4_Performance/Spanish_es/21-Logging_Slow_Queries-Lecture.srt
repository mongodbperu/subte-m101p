1
00:00:00,000 --> 00:00:00,120

2
00:00:00,120 --> 00:00:03,040
Hemos hablado de
cómo crear índices y

3
00:00:03,040 --> 00:00:06,200
de cómo usar el comando
"explain" para averiguar

4
00:00:06,200 --> 00:00:08,410
qué índices están siendo usados
y cómo están siendo usados

5
00:00:08,410 --> 00:00:11,400
en tus consultas, pero por
último, hablemos acerca del

6
00:00:11,400 --> 00:00:13,520
rendimiento de tus programas
donde vas a necesitar hacer

7
00:00:13,520 --> 00:00:15,520
algún "profiling" para
averiguar qué está

8
00:00:15,520 --> 00:00:17,500
lento dentro de tus programas.

9
00:00:17,500 --> 00:00:20,120
Ahora, de hecho hay un
"profiler" integrado a mongod

10
00:00:20,120 --> 00:00:22,760
y voy a enseñarte
cómo activarlo, pero

11
00:00:22,760 --> 00:00:25,680
antes de hacerlo hay una
característica por defecto

12
00:00:25,680 --> 00:00:29,330
que podría ayudarte y es que
Mongo registra automáticamente

13
00:00:29,330 --> 00:00:34,240
las consultas lentas por encima
de los 100 milisegundos al "log"

14
00:00:34,240 --> 00:00:37,220
que mongod escribe
cuando tú lo inicias.

15
00:00:37,220 --> 00:00:39,880
Así que ésta es una característica
de "logging" por defecto

16
00:00:39,880 --> 00:00:41,360
que puede ser muy útil.

17
00:00:41,360 --> 00:00:43,480
Permíteme mostrarte
cómo funciona eso.

18
00:00:43,480 --> 00:00:46,760
Voy a iniciar mongod aquí
con el valor predeterminado.

19
00:00:46,760 --> 00:00:48,750
Aquí, voy a detenerlo.

20
00:00:48,750 --> 00:00:50,800
Tengo un "dbpath" y
nada más establecido.

21
00:00:50,800 --> 00:00:55,060
Si hago eso, está bien, no
hace nada más y luego voy

22
00:00:55,060 --> 00:00:57,540
aquí a mi shell mongo.

23
00:00:57,540 --> 00:00:59,455
Voy a tener que volver a
conectar, por ser la primera

24
00:00:59,455 --> 00:01:01,990
vez que me conecta,
estoy haciendo eso.

25
00:01:01,990 --> 00:01:04,330
Y ahora, voy a hacer un
"find" en la colección

26
00:01:04,330 --> 00:01:07,920
"students" y esta colección
tiene 10 millones de

27
00:01:07,920 --> 00:01:10,170
documentos que hemos
visto muchas veces.

28
00:01:10,170 --> 00:01:14,230
Y he quitado todos los índices,
así que va a ser lento

29
00:01:14,230 --> 00:01:16,740
ya que tiene que escanear la
colección completa, si busco por

30
00:01:16,740 --> 00:01:18,720
un "student_id" con valor 10000.

31
00:01:18,720 --> 00:01:19,830
Voy a hacer eso.

32
00:01:19,830 --> 00:01:21,820
Va a tomar un tiempo.

33
00:01:21,820 --> 00:01:24,260
Incluso tiene que hacer un
"spin-up" al disco porque no

34
00:01:24,260 --> 00:01:25,390
lo he hecho en mucho tiempo.

35
00:01:25,390 --> 00:01:27,582
Encuentra el objeto en
cuestión, encuentra el

36
00:01:27,582 --> 00:01:29,060
documento, todo bien.

37
00:01:29,060 --> 00:01:35,450
Y si seguimos aquí, en el
"log", puedes ver, justo aquí

38
00:01:35,450 --> 00:01:38,090
que dice que había una
consulta realmente lenta.

39
00:01:38,090 --> 00:01:40,190
En realidad, me da la consulta,
busqué por un "student_id" igual a

40
00:01:40,190 --> 00:01:44,910
10000 y fue en
"school.students" y tomó cerca

41
00:01:44,910 --> 00:01:46,110
de cuatro segundos.

42
00:01:46,110 --> 00:01:50,000
Muy útil y sin duda, deberías
verificar tus registros

43
00:01:50,000 --> 00:01:53,275
para asegurarte que no tienes
una gran cantidad de consultas

44
00:01:53,275 --> 00:01:55,180
lentas y esto es algo que está
integrado y no necesitas hacer

45
00:01:55,180 --> 00:01:56,880
algo para conseguir esto.

46
00:01:56,880 --> 00:01:58,130
Es automático.
