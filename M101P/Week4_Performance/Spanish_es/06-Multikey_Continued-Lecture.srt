1
00:00:00,000 --> 00:00:00,120

2
00:00:00,120 --> 00:00:02,950
Una cosa que quiero aclarar
es que la indexación no está

3
00:00:02,950 --> 00:00:07,320
restringida al primer nivel
de claves dentro de un documento.

4
00:00:07,320 --> 00:00:11,210
Así, por ejemplo, tengo esta
colección "people" justo aquí,

5
00:00:11,210 --> 00:00:13,760
y he impreso de forma indentada
los contenidos.

6
00:00:13,760 --> 00:00:18,270
Tiene un par de documentos
pequeños más este documento

7
00:00:18,270 --> 00:00:22,800
más grande por aquí que contiene a
"Tim Johnson" y sus direcciones,

8
00:00:22,800 --> 00:00:25,450
que es un array de direcciones,
justo aquí.

9
00:00:25,450 --> 00:00:30,000
Y luego en el array de
direcciones, hay una etiqueta para

10
00:00:30,000 --> 00:00:33,520
cada tipo de dirección,
así como un

11
00:00:33,520 --> 00:00:35,060
array de números de teléfono.

12
00:00:35,060 --> 00:00:37,080
Y éstos son sólo
contenedores, de forma que los números del

13
00:00:37,080 --> 00:00:39,080
uno al cinco, están en un array.

14
00:00:39,080 --> 00:00:43,590
En realidad podemos crear un índice
sobre estas subpartes, estos

15
00:00:43,590 --> 00:00:45,120
subarrays, del documento.

16
00:00:45,120 --> 00:00:47,390
Permíteme que te enseñe
cómo sería.

17
00:00:47,390 --> 00:00:51,250
Si quisieras poner un índice
sobre la clave "addresses" y 

18
00:00:51,250 --> 00:00:53,290
luego hubiera un array bajo
ella, y luego el

19
00:00:53,290 --> 00:00:56,390
"tag" en ese array, podrías
hacerlo de esta manera.

20
00:00:56,390 --> 00:01:00,750
Y si quisieras añadir
uno de los teléfonos,

21
00:01:00,750 --> 00:01:02,350
podrías hacerlo de esa forma.

22
00:01:02,350 --> 00:01:06,360
Y ahora, si echamos un vistazo a
"getIndexes", verás que aparecen

23
00:01:06,360 --> 00:01:13,000
estos índices multiclave sobre la
clave "phone" por aquí, y la

24
00:01:13,000 --> 00:01:14,600
clave "tag" por aquí.

25
00:01:14,600 --> 00:01:17,795
Por lo que es muy útil si
estás buscando crear un

26
00:01:17,795 --> 00:01:19,450
documento enriquecido.

27
00:01:19,450 --> 00:01:24,450
Y la forma en que funciona es, que
MongoDB añadirá un elemento al índice,

28
00:01:24,450 --> 00:01:28,520
o punto en el índice, si prefieres, por
cada elemento en el array,

29
00:01:28,520 --> 00:01:31,940
y si cambias esos elementos
entonces habría que cambiar

30
00:01:31,940 --> 00:01:34,780
el punto en esos índices.

31
00:01:34,780 --> 00:01:37,000
Pero no pienses más sobre
esto, puedes añadir al índice

32
00:01:37,000 --> 00:01:40,000
cualquier subparte que quieras y
en cierto modo funcionará

33
00:01:40,000 --> 00:01:41,250
de la forma que esperas.

34
00:01:41,250 --> 00:01:42,290