1
00:00:00,000 --> 00:00:00,120

2
00:00:00,120 --> 00:00:01,960
Ahora hablemos sobre el "profiler"
(analizador de rendimiento).

3
00:00:01,960 --> 00:00:04,810
El "profiler" es una
facilidad más sofisticada.

4
00:00:04,810 --> 00:00:09,300
Ésta escribe entradas,
documentos, a "system.profile"

5
00:00:09,300 --> 00:00:12,690
para cualquier consulta que tarda
más que un período de tiempo

6
00:00:12,690 --> 00:00:13,650
especificado.

7
00:00:13,650 --> 00:00:15,540
Hay tres niveles
para el "profiler".

8
00:00:15,540 --> 00:00:18,600
Hay nivel cero, nivel
uno y nivel dos.

9
00:00:18,600 --> 00:00:22,310
Nivel cero es el nivel por defecto
y significa que está apagado.

10
00:00:22,310 --> 00:00:26,030
Nivel uno significa que quiero
registrar mis consultas lentas.

11
00:00:26,030 --> 00:00:29,730
Y nivel dos significa que quiero
registrar todas mis consultas.

12
00:00:29,730 --> 00:00:32,240
Entonces, ¿por qué quieres
registrar todas tus consultas?

13
00:00:32,240 --> 00:00:34,850
Y la razón no es tanto
por depuración de

14
00:00:34,850 --> 00:00:38,210
rendimiento, sino es porque
cuando escribes un programa,

15
00:00:38,210 --> 00:00:41,780
es conveniente ver todo el tráfico
de la base de datos para que

16
00:00:41,780 --> 00:00:42,990
puedas averiguar si
el programa está

17
00:00:42,990 --> 00:00:44,170
haciendo lo que esperas.

18
00:00:44,170 --> 00:00:47,210
Así que esto es en realidad más una
característica general de depuración

19
00:00:47,210 --> 00:00:49,340
que una de depuración
de rendimiento.

20
00:00:49,340 --> 00:00:51,880
Y es posible que desees usarlo
cuando estés depurando tus

21
00:00:51,880 --> 00:00:54,790
programas, activar el
"profiler" a nivel dos y ver

22
00:00:54,790 --> 00:00:56,870
todo lo que está
ocurriendo en el sistema.

23
00:00:56,870 --> 00:00:59,520
Pero en este momento, vamos a
enfocarnos en este nivel uno que

24
00:00:59,520 --> 00:01:01,230
es registrar las consultas lentas.

25
00:01:01,230 --> 00:01:05,780
Vamos e iniciemos Mongo
registrando consultas lentas.

26
00:01:05,780 --> 00:01:09,560
Vamos a ejecutar "mongod
-dbpath"... y lo mismo que

27
00:01:09,560 --> 00:01:11,110
antes, lo que usé.

28
00:01:11,110 --> 00:01:14,160
Y luego "--profile 1", registra mis
consultas lentas, cualquiera que

29
00:01:14,160 --> 00:01:16,530
esté por encima de los 2 milisegundos.

30
00:01:16,530 --> 00:01:17,810
Así que voy a hacer eso.

31
00:01:17,810 --> 00:01:20,550
Y ahora, está registrando
mis consultas lentas.

32
00:01:20,550 --> 00:01:23,230
Y ahora, voy a hacer
una consulta lenta.

33
00:01:23,230 --> 00:01:26,800
Entonces voy a hacer la
misma consulta otra vez.

34
00:01:26,800 --> 00:01:28,340
Muy bien, me llevó un tiempo.

35
00:01:28,340 --> 00:01:29,840
Tomó cerca de cuatro segundos.

36
00:01:29,840 --> 00:01:35,940
Y ahora, voy a echar un vistazo a
"db.system.profile" y ver lo que

37
00:01:35,940 --> 00:01:37,770
hay que ver.

38
00:01:37,770 --> 00:01:44,070
Y esta es la consulta
que acabamos de hacer.

39
00:01:44,070 --> 00:01:47,770
Podemos ver que hay una
consulta a la colección

40
00:01:47,770 --> 00:01:49,570
"students", donde
estuvimos buscando

41
00:01:49,570 --> 00:01:51,660
por "student_id: 10000".

42
00:01:51,660 --> 00:01:53,430
Ocurrió aquí,
en este "timestamp".

43
00:01:53,430 --> 00:01:55,750
Y escaneó 10 millones
de documentos.

44
00:01:55,750 --> 00:01:56,790
Eso suena lento.

45
00:01:56,790 --> 00:02:02,590
Retornó un documento
y tomó 4.2 segundos,

46
00:02:02,590 --> 00:02:04,410
4231 milisegundos.

47
00:02:04,410 --> 00:02:06,570
Así que esto va
a ser muy útil.

48
00:02:06,570 --> 00:02:07,790
Y puedes ver que
en realidad retorna

49
00:02:07,790 --> 00:02:09,229
más de un documento.

50
00:02:09,229 --> 00:02:12,020
Retorna algo de lo
que hice antes.

51
00:02:12,020 --> 00:02:14,510
Esta es una colección con tope,
lo que significa que hay una

52
00:02:14,510 --> 00:02:17,260
colección con tamaño fijo y
reciclará el espacio en la

53
00:02:17,260 --> 00:02:19,840
colección luego
de utilizarlo todo.

54
00:02:19,840 --> 00:02:21,510
Así que podemos usar
esta información.

55
00:02:21,510 --> 00:02:22,710
Podemos consultar en ella.

56
00:02:22,710 --> 00:02:26,520
Y podemos ver, por ejemplo este
"millis" por encima de 4000.

57
00:02:26,520 --> 00:02:29,120
Permíteme mostrarte algunos tipos
de consultas que se pueden hacer.

58
00:02:29,120 --> 00:02:34,270
Así que aquí, voy a hacer un
"find" en la colección "profile"

59
00:02:34,270 --> 00:02:38,710
buscando por algo con "test.foo"
en él con el espacio de nombre,

60
00:02:38,710 --> 00:02:42,130
que es la colección "foo",
que es otra colección

61
00:02:42,130 --> 00:02:44,950
donde he estado realizando
consultas también.

62
00:02:44,950 --> 00:02:48,820
Y luego, ordenado por el "timestamp",
impreso elegantemente.

63
00:02:48,820 --> 00:02:53,000
Y puedes ver que no hay nada
aquí ahora en "test.foo".

64
00:02:53,000 --> 00:02:58,240
Pero si cambio esto para que sea
la colección "school.students",

65
00:02:58,240 --> 00:02:59,610
voy a la consulta que
acabamos de hacer.

66
00:02:59,610 --> 00:03:01,580
También podemos buscar por
cosas que son más lentas

67
00:03:01,580 --> 00:03:03,210
que una determinada duración.

68
00:03:03,210 --> 00:03:04,610
Voy a mostrarte
cómo dfunciona eso.

69
00:03:04,610 --> 00:03:05,220
Aquí vamos.

70
00:03:05,220 --> 00:03:09,890
Se trata de una consulta, una vez
más, de "system.profile" donde

71
00:03:09,890 --> 00:03:14,635
estamos buscando cosas que tienen
milisegundos mayores que uno.

72
00:03:14,635 --> 00:03:16,670
Y vamos a ordenar por
"timestamp" otra vez e

73
00:03:16,670 --> 00:03:18,090
imprimirlo elegantemente.

74
00:03:18,090 --> 00:03:18,970
Muy conveniente.

75
00:03:18,970 --> 00:03:21,130
Esa es la forma en que
utilizaría la información

76
00:03:21,130 --> 00:03:22,330
del "profiling" que se obtiene.

77
00:03:22,330 --> 00:03:26,135
Puedes activar este "profiler"
desde el shell Mongo.

78
00:03:26,135 --> 00:03:27,800
Permíteme mostrarte
cómo hacer eso.

79
00:03:27,800 --> 00:03:30,260
Puedes obtener el estado
del "profiling".

80
00:03:30,260 --> 00:03:32,080
Aquí, te lo mostraré.

81
00:03:32,080 --> 00:03:33,520
"getProfilingLevel"--

82
00:03:33,520 --> 00:03:36,720
tenemos establecido
el nivel uno ahora.

83
00:03:36,720 --> 00:03:38,910
Obtengamos el estado.

84
00:03:38,910 --> 00:03:42,620
Y puedes ver que está establecido
en uno, que es para consultas lentas,

85
00:03:42,620 --> 00:03:44,340
las que estén por encima
de dos milisegundos.

86
00:03:44,340 --> 00:03:49,090
Puedes establecer el
estado si los deseamos.

87
00:03:49,090 --> 00:03:50,330
Así es cómo se activa
el "profiler" desde

88
00:03:50,330 --> 00:03:52,170
el shell Mongo.

89
00:03:52,170 --> 00:03:55,710
Vamos a establecer el nivel uno,
pero deseo sólo ver cosas

90
00:03:55,710 --> 00:03:58,230
que tardan más que
cuatro milisegundos.

91
00:03:58,230 --> 00:04:01,540
Si hago eso, ¡oh! me
refería a establecer el

92
00:04:01,540 --> 00:04:04,070
nivel de "profiler", no al estado.

93
00:04:04,070 --> 00:04:05,730
Si estableces el nivel
de "profiling"--

94
00:04:05,730 --> 00:04:06,210
justo aquí--

95
00:04:06,210 --> 00:04:10,880
"setProfilingLevel(1, 4)",
lo que significa: consultas lentas

96
00:04:10,880 --> 00:04:11,870
por encima de cuatro milisegundos.

97
00:04:11,870 --> 00:04:17,480
Y ahora me dice lo que suele
hacer, para que pueda tener

98
00:04:17,480 --> 00:04:18,130
alguna información de depuración.

99
00:04:18,130 --> 00:04:22,670
Pero si obtengo el estado,
puedo ver que ahora está

100
00:04:22,670 --> 00:04:26,040
establecido a nivel uno y registrando
cosas por encima de cuatro.

101
00:04:26,040 --> 00:04:31,480
Si deseo apagarlo por
completo, sólo establezco

102
00:04:31,480 --> 00:04:37,070
a cero y eso debería arreglarlo
por mi. "setProfilingLevel"--

103
00:04:37,070 --> 00:04:40,545
y si ahora obtengo el
estado del "profiling",

104
00:04:40,545 --> 00:04:41,850
debería ver que es cero.

105
00:04:41,850 --> 00:04:45,580
Así que si obtengo el nivel de
"profiling", que es otro comando,

106
00:04:45,580 --> 00:04:47,990
también me dirá
que es cero.

107
00:04:47,990 --> 00:04:51,150
Así que estos son los comandos
que puedes desear conocer para

108
00:04:51,150 --> 00:04:52,770
obtener el nivel de "profiling",
que te dirá lo que

109
00:04:52,770 --> 00:04:53,940
está haciendo.

110
00:04:53,940 --> 00:04:55,510
Si deseas establecer el
nivel de "profiling",

111
00:04:55,510 --> 00:04:56,500
puedes hacerlo.

112
00:04:56,500 --> 00:04:57,480
Esto toma dos parámetros.

113
00:04:57,480 --> 00:04:58,963
Sólo le he dado uno aquí
porque estuvo apagado.

114
00:04:58,963 --> 00:05:02,820
Pero necesita dos parámetros
que son: el nivel y luego

115
00:05:02,820 --> 00:05:07,350
el número de milisegundos de lo
que deseo registrar,

116
00:05:07,350 --> 00:05:10,310
cualquier consulta que lo
exceda será registrada.

117
00:05:10,310 --> 00:05:13,900
Bueno, es hora de un cuestionario.

118
00:05:13,900 --> 00:05:16,520
Escribe la consulta para buscar
en la colección "system.profile"

119
00:05:16,520 --> 00:05:18,840
por todas las consultas
que tuvieron más de un

120
00:05:18,840 --> 00:05:20,810
segundo ordenado por
"timestamp" descendentemente.

121
00:05:20,810 --> 00:05:22,060
