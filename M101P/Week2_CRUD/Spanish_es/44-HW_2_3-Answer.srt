1
00:00:00,000 --> 00:00:00,180

2
00:00:00,180 --> 00:00:03,620
En este problema, te pedíamos
añadir el código al blog que

3
00:00:03,620 --> 00:00:06,550
permitiría a la gente registrarse
en el blog y conectarse

4
00:00:06,550 --> 00:00:07,740
al blog.

5
00:00:07,740 --> 00:00:09,190
Necesitabas trabajar
en dos lugares.

6
00:00:09,190 --> 00:00:13,730
El primero era este código
"add_user" en "userDAO.py".

7
00:00:13,730 --> 00:00:16,820
Necesitabas añadir esta sentencia
justo aquí e

8
00:00:16,820 --> 00:00:20,450
insertar el registro del usuario por
aquí, "self.users.insert(user)".

9
00:00:20,450 --> 00:00:23,170

10
00:00:23,170 --> 00:00:26,790
Y el segundo lugar en el que necesitabas
trabajar está por aquí, en

11
00:00:26,790 --> 00:00:28,540
"validate_login".

12
00:00:28,540 --> 00:00:31,200
Necesitabas encontrar el usuario
en la colección "user".

13
00:00:31,200 --> 00:00:34,520
Y la forma de hacer eso es
"self.users.find_one".

14
00:00:34,520 --> 00:00:36,830
Y luego especificas "_id"
y el nombre 

15
00:00:36,830 --> 00:00:39,510
de usuario que envió
el usuario.

16
00:00:39,510 --> 00:00:40,900
Eso recupera el documento.

17
00:00:40,900 --> 00:00:42,765
A continuación comparas
las contraseñas.

18
00:00:42,765 --> 00:00:44,530
Y ahí es donde
necesitabas trabajar.

19
00:00:44,530 --> 00:00:45,740
Por lo que ésta es la solución
finalizada.

20
00:00:45,740 --> 00:00:46,860
Veamos si funciona.

21
00:00:46,860 --> 00:00:48,270
Así que iremos aquí.

22
00:00:48,270 --> 00:00:51,090
Y vamos a ejecutarlo.

23
00:00:51,090 --> 00:00:51,690
Oh.

24
00:00:51,690 --> 00:00:54,510
Parece que Python está
ya en ejecución.

25
00:00:54,510 --> 00:00:58,140
Así que simplemente mataremos todos los
procesos Python y veremos si lo ejecuta.

26
00:00:58,140 --> 00:00:58,555
Yup.

27
00:00:58,555 --> 00:01:01,110
Y entonces justo aquí,
vamos a ejecutar

28
00:01:01,110 --> 00:01:03,870
el script de validación.

29
00:01:03,870 --> 00:01:06,030
Y puedes ver que
funcionó.

30
00:01:06,030 --> 00:01:09,220
Y obtuvo un código de validación,
que aparece en blanco ahí.

31
00:01:09,220 --> 00:01:11,900
Pero obtendrás el real
cuando lo ejecutes.

32
00:01:11,900 --> 00:01:14,660
Y veamos si
el blog funciona.

33
00:01:14,660 --> 00:01:15,580
Allá vamos.

34
00:01:15,580 --> 00:01:16,360
Desconectémonos.

35
00:01:16,360 --> 00:01:18,810
Creemos un nuevo usuario.

36
00:01:18,810 --> 00:01:25,822
"test101", contraseña "test",
verficamos "test".

37
00:01:25,822 --> 00:01:26,300
De acuerdo.

38
00:01:26,300 --> 00:01:33,460
Ahora desconectémonos y conectémonos
como este usuario "test101".

39
00:01:33,460 --> 00:01:34,790
Y podemos conectarnos.

40
00:01:34,790 --> 00:01:36,560
Por lo que parece que funciona adecuadamente.

41
00:01:36,560 --> 00:01:41,780
Y la parte final de esto, por 
supuesto, sería ir a la

42
00:01:41,780 --> 00:01:44,160
colección "users",
y hacer "db.users.find()".

43
00:01:44,160 --> 00:01:46,980

44
00:01:46,980 --> 00:01:49,640
Y oh, hay un montón de
entradas de prueba que fueron 

45
00:01:49,640 --> 00:01:50,880
introducidas por el programa.

46
00:01:50,880 --> 00:01:55,230
Hagamos un "find" 
donde "_id" sea

47
00:01:55,230 --> 00:01:57,250
este usuario "test101".

48
00:01:57,250 --> 00:01:58,640
Imprime eso de forma ordenada.

49
00:01:58,640 --> 00:01:59,690
Allá vamos.

50
00:01:59,690 --> 00:02:02,470
Puedes ver que "test101"
es el usuario.

51
00:02:02,470 --> 00:02:04,820
Y aquí está el hash
de la contraseña.

52
00:02:04,820 --> 00:02:06,090
Así que parece que todo eso funciona.

53
00:02:06,090 --> 00:02:07,340