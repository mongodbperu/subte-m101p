1
00:00:00,000 --> 00:00:00,420

2
00:00:00,420 --> 00:00:02,380
Avancemos un poco más
en nuestra exploración de

3
00:00:02,380 --> 00:00:05,770
las consultas para arrays
descubriendo un operador más

4
00:00:05,770 --> 00:00:08,580
específico para examinar
los contenidos de un array.

5
00:00:08,580 --> 00:00:11,080
Sólo como recordatorio, tenemos lo
siguiente en nuestra colección

6
00:00:11,080 --> 00:00:12,080
"accounts".

7
00:00:12,080 --> 00:00:14,700
Vamos a adornarla ligeramante
añadiendo algunos datos más.

8
00:00:14,700 --> 00:00:17,500
En este punto, tenemos un puñado
de cuentas conteniendo

9
00:00:17,500 --> 00:00:20,200
varias combinaciones
de favoritos.

10
00:00:20,200 --> 00:00:22,640
De nuevo, como recordatorio, si resulta
un poco difícil leer estas

11
00:00:22,640 --> 00:00:24,560
cosas debido a que son más largas
que el ancho del

12
00:00:24,560 --> 00:00:27,920
terminal, puedes añadir
".pretty()" a la operación

13
00:00:27,920 --> 00:00:30,790
"find" para que se
impriman en un formato

14
00:00:30,790 --> 00:00:32,270
ligeramente más indentado.

15
00:00:32,270 --> 00:00:35,120
Así que tenemos un montón
de combinaciones de favoritos.

16
00:00:35,120 --> 00:00:37,320
Supongamos que quisieras consultar
todos aquellos documentos que

17
00:00:37,320 --> 00:00:40,950
tienen "pretzels" y "beer"
en el array "favorites".

18
00:00:40,950 --> 00:00:42,800
Bien, hay un operador
para eso.

19
00:00:42,800 --> 00:00:48,570
El operador "$all" coincide con cualquier
documento que tenga todos los

20
00:00:48,570 --> 00:00:51,730
elementos especificados dentro del
array en el campo que estés

21
00:00:51,730 --> 00:00:52,760
examinando.

22
00:00:52,760 --> 00:00:55,960
Y el operando del operador
"$all" es un array.

23
00:00:55,960 --> 00:00:58,510
Y los elementos dentro de ese
array pueden estar en cualquier orden

24
00:00:58,510 --> 00:01:01,050
en el campo correspondiente
en los documentos.

25
00:01:01,050 --> 00:01:05,069
Así por ejemplo, "Howard" tiene como
favoritos "['pretzels', 'beer']"

26
00:01:05,069 --> 00:01:06,060
en ese orden.

27
00:01:06,060 --> 00:01:09,240
Pero "Irving" tiene como favoritos 
"['beer', 'pretzels', 'cheese'] en

28
00:01:09,240 --> 00:01:10,320
ese orden.

29
00:01:10,320 --> 00:01:12,940
Otra forma de expresarlo es
que el operando en la

30
00:01:12,940 --> 00:01:17,160
parte derecha del "$all" en
la consulta tiene que ser un subconjunto --

31
00:01:17,160 --> 00:01:20,920
es posible que no un subconjunto estricto, 
posiblemente igual al conjunto --

32
00:01:20,920 --> 00:01:24,220
de las cosas que son los
valores del campo que se está

33
00:01:24,220 --> 00:01:26,480
consultado en el "find".

34
00:01:26,480 --> 00:01:29,770
Es decir, "favorites" tiene
que contener "beer" y "pretzels"

35
00:01:29,770 --> 00:01:32,550
en cualquier orden y podría contener
algunas otras cosas.

36
00:01:32,550 --> 00:01:34,910
Por último, hay un operador
más que tiene que ver

37
00:01:34,910 --> 00:01:36,120
tangencialmente con los arrays.

38
00:01:36,120 --> 00:01:38,230
Aunque no es específicamente
sobre consultas en

39
00:01:38,230 --> 00:01:41,330
arrays, sin embargo puedes usarlo
con la característica que tiene

40
00:01:41,330 --> 00:01:43,050
Mongo para examinar los arrays.

41
00:01:43,050 --> 00:01:46,450
Específicamente, al igual que en SQL,
el lenguaje de consulta de Mongo

42
00:01:46,450 --> 00:01:50,320
tiene un operador "$in", que toma
una lista de cadenas y

43
00:01:50,320 --> 00:01:53,040
devuelve sólo aquellos documentos
donde el campo

44
00:01:53,040 --> 00:01:54,890
correspondiente -- en este caso, "name" --

45
00:01:54,890 --> 00:01:57,330
tiene un valor que es
"Howard" o "John".

46
00:01:57,330 --> 00:01:59,550
Es decir, es una
enumeración de todos los valores

47
00:01:59,550 --> 00:02:01,450
que estás buscando
para el campo dado.

48
00:02:01,450 --> 00:02:04,570
Esta característica forma parte, con suerte
de manera intuitiva,

49
00:02:04,570 --> 00:02:07,790
del examen interno de
los arrays que, según acabas

50
00:02:07,790 --> 00:02:09,639
de aprender, hace MongoDB.

51
00:02:09,639 --> 00:02:13,380
Por ejemplo, si busco
"favorites: {$in: ['beer', 'ice cream']}",

52
00:02:13,380 --> 00:02:16,500
debería encontrar
cualquier documento que tenga un campo

53
00:02:16,500 --> 00:02:20,790
"favorites" que contenga "beer"
o "ice cream".

54
00:02:20,790 --> 00:02:23,140
Y eso parece
especificar a todo el mundo.

55
00:02:23,140 --> 00:02:25,110
OK, hagamos un cuestionario.

56
00:02:25,110 --> 00:02:28,100
¿Cuál de los siguientes documentos
coincide con esta consulta?

57
00:02:28,100 --> 00:02:35,230
"db.users.find({friends: {$all:
['Joe', 'Bob']}, favorites: {$in:

58
00:02:35,230 --> 00:02:36,480
['running', 'pickles']}})".

59
00:02:36,480 --> 00:02:37,400