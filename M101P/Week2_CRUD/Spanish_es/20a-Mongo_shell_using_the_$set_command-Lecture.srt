1
00:00:00,000 --> 00:00:01,050

2
00:00:01,050 --> 00:00:03,390
Ya hemos aprendido una de
las cosas que puede hacer

3
00:00:03,390 --> 00:00:05,380
el método "update" en
el shell JavaScript.

4
00:00:05,380 --> 00:00:07,650
Y eso es a lo que podríamos
llamar un reemplazo completo

5
00:00:07,650 --> 00:00:09,010
de los campos en un documento.

6
00:00:09,010 --> 00:00:11,470
Esto es algo peligroso
de hacer en muchos

7
00:00:11,470 --> 00:00:12,830
tipos de aplicaciones.

8
00:00:12,830 --> 00:00:15,040
Y por lo general, deseas
manipular sólo campos

9
00:00:15,040 --> 00:00:16,200
específicos en un documento.

10
00:00:16,200 --> 00:00:17,890
Y de hecho, el operador
"update" permite

11
00:00:17,890 --> 00:00:19,400
hacer eso también.

12
00:00:19,400 --> 00:00:21,800
Así que aquí está mi
colección "people".

13
00:00:21,800 --> 00:00:23,420
Y tiene varios nombres.

14
00:00:23,420 --> 00:00:26,920
Supongamos que quiero darle
a "Alice" un campo "age".

15
00:00:26,920 --> 00:00:29,100
Bueno, podemos hacer
esto de dos maneras.

16
00:00:29,100 --> 00:00:31,790
Primero, podrías usar una
operación de reemplazo.

17
00:00:31,790 --> 00:00:34,680
Sin embargo, con el fin de lograr
el efecto deseado, es decir,

18
00:00:34,680 --> 00:00:37,440
añadiendo un valor "age",
necesitaría saber todos los otros

19
00:00:37,440 --> 00:00:39,600
campos que existen
en el documento

20
00:00:39,600 --> 00:00:40,840
donde "name" es "Alice".

21
00:00:40,840 --> 00:00:43,010
Y quizá no conozca
esa información.

22
00:00:43,010 --> 00:00:46,470
Y por eso este método de
reemplazo no es una gran idea.

23
00:00:46,470 --> 00:00:49,240
En cambio, lo que queremos es
una operación que manipule

24
00:00:49,240 --> 00:00:51,190
sólo los campos que
especificamos y deje todos los

25
00:00:51,190 --> 00:00:52,430
otros campos como están.

26
00:00:52,430 --> 00:00:56,340
Y para ello, "update" tiene
varios operadores "$".

27
00:00:56,340 --> 00:00:59,520
En el simple caso que sólo desee
establecer un campo específico.

28
00:00:59,520 --> 00:01:02,310
Si ese campo no existe,
esto haría que exista.

29
00:01:02,310 --> 00:01:05,010
Así que el "update" que está
abajo en mi terminal dice:

30
00:01:05,010 --> 00:01:08,480
encuentra el documento donde "name"
es "Alice" y establece el campo

31
00:01:08,480 --> 00:01:09,440
"age" a 30.

32
00:01:09,440 --> 00:01:11,590
Si no hay ningún campo
"age", se creará uno.

33
00:01:11,590 --> 00:01:14,490
Si ahora consulto por el
documento donde "name" es "Alice",

34
00:01:14,490 --> 00:01:16,120
"Alice" tiene ahora un "age".

35
00:01:16,120 --> 00:01:18,200
Una vez que he creado
este campo "age", sin duda

36
00:01:18,200 --> 00:01:19,690
puedo establecerlo de nuevo.

37
00:01:19,690 --> 00:01:22,290
Y este tipo de operaciones
"$set" que cambian un

38
00:01:22,290 --> 00:01:26,050
número a otro son, en realidad,
muy eficientes en MongoDB.

39
00:01:26,050 --> 00:01:28,630
Además, más allá de la
operación "$set", tenemos una

40
00:01:28,630 --> 00:01:31,900
operación que puede incrementar
un campo que ya existe.

41
00:01:31,900 --> 00:01:34,000
Se llama "$inc".

42
00:01:34,000 --> 00:01:36,590
Teniendo en cuenta que sé que
"Alice" tiene un campo "age"

43
00:01:36,590 --> 00:01:40,440
que actualmente es 31, si actualizo
especificando "$inc" de "age"

44
00:01:40,440 --> 00:01:43,090
por 1, entonces sucede que
sé que debería cambiar

45
00:01:43,090 --> 00:01:44,510
a 32.

46
00:01:44,510 --> 00:01:46,720
Y de hecho, ahora es 32.

47
00:01:46,720 --> 00:01:51,340
Así que "$set" puede añadir o
modificar un campo en un documento.

48
00:01:51,340 --> 00:01:54,270
Mientras que "$inc" puede modificar
un campo en un documento.

49
00:01:54,270 --> 00:01:57,880
De hecho, si el campo no
existe, "$inc" creará un

50
00:01:57,880 --> 00:02:01,760
campo teniendo como
valor el incremento.

51
00:02:01,760 --> 00:02:06,635
Por ejemplo, si quiero incrementar
el campo "age" para "Bob" y

52
00:02:06,635 --> 00:02:09,620
sucede que no existe,
entonces hará que exista con

53
00:02:09,620 --> 00:02:12,500
un valor que va a tener
el incremento.

54
00:02:12,500 --> 00:02:14,550
En este caso, 1.

55
00:02:14,550 --> 00:02:15,490
Muy bien.

56
00:02:15,490 --> 00:02:17,010
Hagamos un simple cuestionario.

57
00:02:17,010 --> 00:02:20,010
Suponiendo que tienes este documento
en una colección llamada "users".

58
00:02:20,010 --> 00:02:22,240
El "username" es "spelunker".

59
00:02:22,240 --> 00:02:24,310
El "country" es "US".

60
00:02:24,310 --> 00:02:29,200
Y el "phone" es "718-343-3433".

61
00:02:29,200 --> 00:02:32,460
Escribe el comando de shell para
actualizar el "country" a "RU"

62
00:02:32,460 --> 00:02:33,710
sólo para este usuario.

63
00:02:33,710 --> 00:02:34,480
