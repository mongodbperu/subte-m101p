1
00:00:00,000 --> 00:00:00,190

2
00:00:00,190 --> 00:00:01,010
OK.

3
00:00:01,010 --> 00:00:03,440
Ahora vamos a juntarlo todo
y construiremos una aplicación

4
00:00:03,440 --> 00:00:04,830
web.

5
00:00:04,830 --> 00:00:06,700
Tenemos mongod instalado.

6
00:00:06,700 --> 00:00:10,590
Y nuestra capa de 
aplicación por aquí.

7
00:00:10,590 --> 00:00:12,860
Va a ser
escrita en Python.

8
00:00:12,860 --> 00:00:15,360
Y tenemos PyMongo instalado.

9
00:00:15,360 --> 00:00:18,780
Y PyMongo va a comunicarse
con MongoDB en BSON.

10
00:00:18,780 --> 00:00:22,740
Y la última parte es que seamos
capaces de mostrar una página

11
00:00:22,740 --> 00:00:24,660
web, vía http.

12
00:00:24,660 --> 00:00:28,670
Y para hacer eso, vamos a
escribir un programa que usa el

13
00:00:28,670 --> 00:00:30,400
framework Bottle.

14
00:00:30,400 --> 00:00:33,300
Por lo que te enseñaré cómo un 
pequeño programa "Hello World"

15
00:00:33,300 --> 00:00:34,280
puede hacer eso.

16
00:00:34,280 --> 00:00:39,760
Entonces voy a abrir este
pequeño programa en Emacs.

17
00:00:39,760 --> 00:00:41,100
Iremos por él 
línea a línea para que

18
00:00:41,100 --> 00:00:42,370
podamos ver qué hace.

19
00:00:42,370 --> 00:00:44,650
Lo primero que hace es
"import bottle".

20
00:00:44,650 --> 00:00:47,410
Y luego "import pymongo".

21
00:00:47,410 --> 00:00:51,570
Y a continuación crea una ruta para
/, que quiere decir la ruta

22
00:00:51,570 --> 00:00:52,480
por defecto del servidor web.

23
00:00:52,480 --> 00:00:56,270
Por lo que cuando vamos a un servidor web
sin ninguna URL tras el hostname,

24
00:00:56,270 --> 00:00:57,660
esto es lo que obtienes.

25
00:00:57,660 --> 00:01:01,015
Es un decorador que le dice a
Python cuál es la próxima función

26
00:01:01,015 --> 00:01:04,489
que va a ejecutar cuando
el usuario alcanza esa ruta.

27
00:01:04,489 --> 00:01:07,050
Y la llamamos "index".

28
00:01:07,050 --> 00:01:09,000
Pero no hay nada especial
en ese nombre.

29
00:01:09,000 --> 00:01:12,080
Y podrías, de hecho, llamarla de
cualquier otra forma que prefieras.

30
00:01:12,080 --> 00:01:17,980
El primer paso aquí es usar
la clase MongoClient para

31
00:01:17,980 --> 00:01:21,000
conectarnos a localhost
al puerto 27017.

32
00:01:21,000 --> 00:01:23,660
Ése es el puerto por defecto en
el que escucha mongod.

33
00:01:23,660 --> 00:01:26,990
Y a continuación, de nuevo, nos 
conectamos a la base de datos "test".

34
00:01:26,990 --> 00:01:29,020
"db = connection.test"

35
00:01:29,020 --> 00:01:30,910
Y luego a la colección
"names".

36
00:01:30,910 --> 00:01:32,430
"db.names"

37
00:01:32,430 --> 00:01:35,960
Luego encontramos un documento simple
usando el comando "find_one"

38
00:01:35,960 --> 00:01:36,990
que va a poner
ese documento

39
00:01:36,990 --> 00:01:38,650
en la variable "item".

40
00:01:38,650 --> 00:01:43,480
Y entonces va a devolver,
básicamente, "Hello" y cualquier cosa

41
00:01:43,480 --> 00:01:46,130
que esté en la clave "name" de
ese documento.

42
00:01:46,130 --> 00:01:49,270
Y esto es una convención de Python
según la cual el %s será

43
00:01:49,270 --> 00:01:51,690
sustituido por lo que esté tras
el signo de porcentaje.

44
00:01:51,690 --> 00:01:53,730
En este caso, item['name'].

45
00:01:53,730 --> 00:01:54,830
"item" es un diccionario.

46
00:01:54,830 --> 00:01:58,160
Y estamos recuperando el
valor de la clave "name".

47
00:01:58,160 --> 00:01:59,890
Ése es el final de la función,
que va a 

48
00:01:59,890 --> 00:02:02,870
ejecutarse cuando pidas la ruta
/ al servidor.

49
00:02:02,870 --> 00:02:05,450
Y lo único que queda por
hacer es que tenemos que

50
00:02:05,450 --> 00:02:06,940
decirle a Bottle que se ejecute.

51
00:02:06,940 --> 00:02:11,660
Y para hacerlo llamamos
a "bottle.run" con "host = localhost" y

52
00:02:11,660 --> 00:02:15,780
"port = 8082", que es un número
de puerto alto al que podemos

53
00:02:15,780 --> 00:02:17,600
llegar sin ser root.

54
00:02:17,600 --> 00:02:20,470
Así que vamos a ejecutarlo.

55
00:02:20,470 --> 00:02:20,730
OK.

56
00:02:20,730 --> 00:02:22,890
Dice que está escuchando
en localhost.

57
00:02:22,890 --> 00:02:25,210
Y ahora vayamos a
un navegador web.

58
00:02:25,210 --> 00:02:28,620
Y pongamos esa URL.

59
00:02:28,620 --> 00:02:31,150
Podemos ver que dice
"Hello Dwight!".

60
00:02:31,150 --> 00:02:33,970
Y si recuerdas, "Dwight" estaba
en la base de datos en la colección

61
00:02:33,970 --> 00:02:35,140
"names".

62
00:02:35,140 --> 00:02:36,500
Y si hacemos un cambio --

63
00:02:36,500 --> 00:02:38,320
lo haré por aquí.

64
00:02:38,320 --> 00:02:40,800
Llamamos a mongo.

65
00:02:40,800 --> 00:02:42,360
"use test"

66
00:02:42,360 --> 00:02:44,960
Y luego hacemos "var j =
db.names.findOne()"

67
00:02:44,960 --> 00:02:47,680

68
00:02:47,680 --> 00:02:49,350
Podemos ver que "j" es "Dwight".

69
00:02:49,350 --> 00:02:50,960
Podríamos hacer "j.name = 'Andrew'"

70
00:02:50,960 --> 00:02:54,410

71
00:02:54,410 --> 00:02:56,290
Y luego podemos hacer
"db.names.save(j)"

72
00:02:56,290 --> 00:03:00,000

73
00:03:00,000 --> 00:03:01,860
Y ahora se guarda "Andrew"
en la colección.

74
00:03:01,860 --> 00:03:04,210
Echemos un vistazo y asegurémonos
que es cierto.

75
00:03:04,210 --> 00:03:06,540
Dice que "Andrew" está
ahora ahí.

76
00:03:06,540 --> 00:03:11,390
Y si volvemos ahora a nuestro
navegador web justo aquí y lo

77
00:03:11,390 --> 00:03:14,710
ejecutamos otra vez, cambia
a "Andrew".

78
00:03:14,710 --> 00:03:20,460
Por lo que puedes ver, ahora tenemos una
aplicación de principio a fin escrita

79
00:03:20,460 --> 00:03:25,330
en Python, que utiliza
Bottle y PyMongo.

80
00:03:25,330 --> 00:03:26,720
Se conecta a la base de datos.

81
00:03:26,720 --> 00:03:28,880
Y luego puede responder
a una petición http y

82
00:03:28,880 --> 00:03:30,130
generar una página web.

83
00:03:30,130 --> 00:03:31,200