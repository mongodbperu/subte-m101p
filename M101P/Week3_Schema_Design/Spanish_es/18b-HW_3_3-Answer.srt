1
00:00:00,000 --> 00:00:00,130

2
00:00:00,130 --> 00:00:03,030
En este problema, te pedimos
modificar el código del blog

3
00:00:03,030 --> 00:00:05,550
para que acepte comentarios
en los posts del blog.

4
00:00:05,550 --> 00:00:08,240
Ahora, sólo hay un lugar
que debes cambiar,

5
00:00:08,240 --> 00:00:11,110
está en blogPostDAO.py.

6
00:00:11,110 --> 00:00:16,010
Pero el flujo de control inicia
en blog.py donde tenemos un

7
00:00:16,010 --> 00:00:18,200
controlador para un nuevo comentario.

8
00:00:18,200 --> 00:00:21,640
Y si recuerdas, el formulario
de comentarios está abajo

9
00:00:21,640 --> 00:00:26,560
de la página del enlace permanente
del post y cuando éste es llamado

10
00:00:26,560 --> 00:00:29,540
con una solicitud POST, extrae
los elementos del formulario, que

11
00:00:29,540 --> 00:00:32,549
son valores ocultos en él,
fuera de la página.

12
00:00:32,549 --> 00:00:34,990
Y entonces recupera el post
por el enlace permanente.

13
00:00:34,990 --> 00:00:37,740
Así que aquí, si por alguna
razón fue enviado un falso

14
00:00:37,740 --> 00:00:39,900
enlace permanente, esto no
obtendría el post.

15
00:00:39,900 --> 00:00:42,630
Así que si no podemos encontrar el
post, redirecciona inmediatamente a

16
00:00:42,630 --> 00:00:44,130
"/post_not_found".

17
00:00:44,130 --> 00:00:47,840
De lo contrario, lo que hace es
que se asegura que el nombre y

18
00:00:47,840 --> 00:00:51,000
el cuerpo estén llenos y
luego agrega el comentario

19
00:00:51,000 --> 00:00:54,930
llamando a "posts.add_comment"
con el enlace permanente, nombre,

20
00:00:54,930 --> 00:00:56,080
correo y el cuerpo.

21
00:00:56,080 --> 00:01:00,000
Eso va directamente a
blogPostDAO.py.

22
00:01:00,000 --> 00:01:03,300
Y después que ha terminado,
va a redireccionar al

23
00:01:03,300 --> 00:01:06,120
enlace permanente de la página
con un request GET, por lo que verás

24
00:01:06,120 --> 00:01:09,580
el mismo post, el post del blog, con
un comentario en la parte inferior.

25
00:01:09,580 --> 00:01:13,050
Veamos qué pasa
en blogPost.py.

26
00:01:13,050 --> 00:01:15,000
Sólo hay un lugar donde
necesitas trabajar y

27
00:01:15,000 --> 00:01:17,010
es en la función
"add_comment".

28
00:01:17,010 --> 00:01:21,050
Necesitas añadir esta actualización
y tenías que buscar un

29
00:01:21,050 --> 00:01:23,355
documento con un enlace permanente
que coincide con el enlace que

30
00:01:23,355 --> 00:01:26,230
fue enviado y luego insertar
un nuevo comentario en el

31
00:01:26,230 --> 00:01:27,640
array de comentarios.

32
00:01:27,640 --> 00:01:30,640
Y entonces, sólo por seguridad,
tengo "upsert=False".

33
00:01:30,640 --> 00:01:32,460
Aunque ya hemos verificado
para asegurarnos que

34
00:01:32,460 --> 00:01:35,890
el enlace permanente corresponde
al existente post, esto debería

35
00:01:35,890 --> 00:01:37,260
encontrar un documento.

36
00:01:37,260 --> 00:01:39,260
Pero si por alguna razón no lo
hace, esto no lo insertará

37
00:01:39,260 --> 00:01:41,280
debido a que "upsert" es "False".

38
00:01:41,280 --> 00:01:44,695
Y lo que "manipulate=False" hace
es decirle al driver que no añada

39
00:01:44,695 --> 00:01:47,730
un campo "_id" si
no hubiera.

40
00:01:47,730 --> 00:01:50,140
Pero no creo que importe
en este caso porque con

41
00:01:50,140 --> 00:01:52,560
"upsert=False", esto no insertará
nada, a menos que encuentre un

42
00:01:52,560 --> 00:01:53,920
documento existente.

43
00:01:53,920 --> 00:01:54,580
OK.

44
00:01:54,580 --> 00:01:56,970
Este es el único lugar donde se
necesita trabajar en este archivo.

45
00:01:56,970 --> 00:02:00,760
Para obtener los
comentarios del blog,

46
00:02:00,760 --> 00:02:04,270
el ordenamiento ocurre naturalmente
en el código existente.

47
00:02:04,270 --> 00:02:05,920
Porque en "get_posts"--

48
00:02:05,920 --> 00:02:08,190
y escribiste esto para
encontrar los posts.

49
00:02:08,190 --> 00:02:10,750
Pero ya tuvimos el código
para asumir que los comentarios

50
00:02:10,750 --> 00:02:14,880
están presentes, se pasaron y
agregaron justo aquí

51
00:02:14,880 --> 00:02:17,920
al crear este nuevo array en estos
elementos de diccionario, cada uno

52
00:02:17,920 --> 00:02:19,430
conteniendo un post.

53
00:02:19,430 --> 00:02:21,480
Así que lo obtienes
de forma gratuita.

54
00:02:21,480 --> 00:02:23,750
Lo mismo en
"get_post_by_permalink" que es

55
00:02:23,750 --> 00:02:25,980
el otro lugar donde
se necesitaba trabajar.

56
00:02:25,980 --> 00:02:28,820
Y en "get_post_by_permalink",
esto busca el post y luego

57
00:02:28,820 --> 00:02:29,530
lo retorna.

58
00:02:29,530 --> 00:02:32,520
Y si hay un comentario en
él, entonces la plantilla

59
00:02:32,520 --> 00:02:33,770
lo mostrará.

60
00:02:33,770 --> 00:02:34,520